{"ast":null,"code":"var _jsxFileName = \"/home/usuario/projetos/sd-08-project-recipes-app/src/components/Item.js\";\nimport React, { Component } from 'react';\nimport shareIcon from \"../images/shareIcon.svg\";\nimport whiteHeartIcon from \"../images/whiteHeartIcon.svg\";\nexport default class Item extends Component {\n  constructor() {\n    super();\n\n    this.juntar = chave => Object.entries(results).map(nome => {\n      if (nome[0].includes(chave)) {\n        return nome[1];\n      }\n\n      return undefined;\n    }).filter(element => element !== undefined);\n\n    this.createIngrediets = () => {\n      const ingredient = juntar('strIngredient');\n      const measure = juntar('strMeasure');\n      return ingredient.map((nome, index) => {\n        if (nome) {\n          return /*#__PURE__*/React.createElement(\"p\", {\n            \"data-testid\": `${index}-ingredient-name-and-measure`,\n            key: index,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 11\n            }\n          }, `${nome} - ${measure[index]}`);\n        }\n\n        return undefined;\n      });\n    };\n\n    this.state = {\n      results: ''\n    };\n    this.fetchRecipe = this.fetchRecipe.bind(this);\n  }\n\n  componentDidMount() {\n    this.fetchRecipe();\n  }\n\n  async fetchRecipe() {\n    const {\n      location: {\n        pathname\n      }\n    } = this.props;\n    const id = pathname.split('/')[2];\n    const type = pathname.split('/')[1];\n\n    if (type === 'comidas') {\n      const req = await fetch(`https://www.themealdb.com/api/json/v1/1/lookup.php?i=${id}`);\n      const results = await req.json();\n      this.setState({\n        results\n      });\n      console.log(results.meals);\n    }\n\n    if (type === 'bebidas') {\n      const req = await fetch(`https://www.thecocktaildb.com/api/json/v1/1/lookup.php?i=${id}`);\n      const results = await req.json();\n      this.setState({\n        results\n      });\n      console.log(results.drinks);\n    }\n  }\n\n  renderMeal() {\n    const {\n      location: {\n        pathname\n      }\n    } = this.props;\n    const index = 0;\n    const type = pathname.split('/')[1];\n    const {\n      results\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 7\n      }\n    }, type === 'comidas' ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"img\", {\n      \"data-testid\": \"recipe-photo\",\n      src: results.meals[0].strMealThumb,\n      alt: \"img\",\n      width: \"70px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"h1\", {\n      \"data-testid\": \"recipe-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }\n    }, results.meals[0].strMeal), /*#__PURE__*/React.createElement(\"p\", {\n      \"data-testid\": \"recipe-category\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }\n    }, results.meals[0].strCategory)) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"img\", {\n      \"data-testid\": \"recipe-photo\",\n      src: results.meals[0].strMealThumb,\n      alt: \"img\",\n      width: \"70px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"h1\", {\n      \"data-testid\": \"recipe-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }\n    }, results.meals[0].strMeal), /*#__PURE__*/React.createElement(\"p\", {\n      \"data-testid\": \"recipe-category\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }\n    }, results.meals[0].strCategory)), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      \"data-testid\": \"share-btn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: shareIcon,\n      alt: \"share icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      \"data-testid\": \"favorite-btn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: whiteHeartIcon,\n      alt: \"favorite\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"p\", {\n      \"data-testid\": `${index}-ingredient-name-and-measure`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }\n    }, \"ingredientes:\"), /*#__PURE__*/React.createElement(\"p\", {\n      \"data-testid\": \"instructions\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }\n    }, \"instru\\xE7oes\"), /*#__PURE__*/React.createElement(\"iframe\", {\n      title: \"teste\",\n      \"data-testid\": \"video\",\n      src: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      \"data-testid\": `${index}-recomendation-card`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }\n    }, \"recomenda\\xE7oes\"), /*#__PURE__*/React.createElement(\"button\", {\n      \"data-testid\": \"start-recipe-btn\",\n      type: \"button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }\n    }, \"Iniciar Receita\"));\n  }\n\n  render() {\n    const {\n      results\n    } = this.state;\n    if (results === '') return null;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, this.renderMeal());\n  }\n\n}","map":{"version":3,"sources":["/home/usuario/projetos/sd-08-project-recipes-app/src/components/Item.js"],"names":["React","Component","Item","constructor","juntar","chave","Object","entries","results","map","nome","includes","undefined","filter","element","createIngrediets","ingredient","measure","index","state","fetchRecipe","bind","componentDidMount","location","pathname","props","id","split","type","req","fetch","json","setState","console","log","meals","drinks","renderMeal","strMealThumb","strMeal","strCategory","shareIcon","whiteHeartIcon","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport shareIcon from '../images/shareIcon.svg';\nimport whiteHeartIcon from '../images/whiteHeartIcon.svg';\n\nexport default class Item extends Component {\n  constructor() {\n    super();\n    this.state = {\n      results: '',\n    };\n\n    this.fetchRecipe = this.fetchRecipe.bind(this);\n  }\n\n  componentDidMount() {\n    this.fetchRecipe();\n  }\n\n  async fetchRecipe() {\n    const { location: { pathname } } = this.props;\n    const id = pathname.split('/')[2];\n    const type = pathname.split('/')[1];\n    if (type === 'comidas') {\n      const req = await fetch(`https://www.themealdb.com/api/json/v1/1/lookup.php?i=${id}`);\n      const results = await req.json();\n      this.setState({ results });\n      console.log(results.meals);\n    }\n    if (type === 'bebidas') {\n      const req = await fetch(`https://www.thecocktaildb.com/api/json/v1/1/lookup.php?i=${id}`);\n      const results = await req.json();\n      this.setState({ results });\n      console.log(results.drinks);\n    }\n  }\n\njuntar = (chave) => Object.entries(results).map((nome) => {\n    if (nome[0].includes(chave)) {\n      return nome[1];\n    }\n    return undefined;\n  }).filter((element) => element !== undefined);\n\ncreateIngrediets = () => {\n    const ingredient = juntar('strIngredient');\n    const measure = juntar('strMeasure');\n    return ingredient.map((nome, index) => {\n      if (nome) {\n        return (\n          <p\n            data-testid={ `${index}-ingredient-name-and-measure` }\n            key={ index }\n          >\n            {`${nome} - ${measure[index]}`}\n          </p>\n        );\n      }\n      return undefined;\n    });\n  };\n\n  renderMeal() {\n    const { location: { pathname } } = this.props;\n    const index = 0;\n    const type = pathname.split('/')[1];\n    const { results } = this.state;\n    return (\n      <div>\n        {\n          type === 'comidas'\n            ? (\n              <>\n                <img\n                  data-testid=\"recipe-photo\"\n                  src={ results.meals[0].strMealThumb }\n                  alt=\"img\"\n                  width=\"70px\"\n                />\n                <h1 data-testid=\"recipe-title\">{ results.meals[0].strMeal }</h1>\n                <p data-testid=\"recipe-category\">\n                  { results.meals[0].strCategory }\n                </p>\n              </>\n            )\n            : (\n              <>\n                <img\n                  data-testid=\"recipe-photo\"\n                  src={ results.meals[0].strMealThumb }\n                  alt=\"img\"\n                  width=\"70px\"\n                />\n                <h1 data-testid=\"recipe-title\">{ results.meals[0].strMeal }</h1>\n                <p data-testid=\"recipe-category\">\n                  { results.meals[0].strCategory }\n                </p>\n              </>\n            )\n        }\n        <button type=\"button\" data-testid=\"share-btn\">\n          <img src={ shareIcon } alt=\"share icon\" />\n        </button>\n        <button type=\"button\" data-testid=\"favorite-btn\">\n          <img src={ whiteHeartIcon } alt=\"favorite\" />\n        </button>\n        <p\n          data-testid={ `${index}-ingredient-name-and-measure` }\n        >\n          ingredientes:\n        </p>\n        <p data-testid=\"instructions\">instruçoes</p>\n        <iframe\n          title=\"teste\"\n          data-testid=\"video\"\n          src=\"\"\n        />\n        <p data-testid={ `${index}-recomendation-card` }>recomendaçoes</p>\n        <button data-testid=\"start-recipe-btn\" type=\"button\">Iniciar Receita</button>\n      </div>\n    );\n  }\n\n  render() {\n    const { results } = this.state;\n    if (results === '') return null;\n    return (\n      <>\n        {this.renderMeal()}\n      </>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/usuario/projetos/sd-08-project-recipes-app/src/components/ItemsDetails.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Button from 'react-bootstrap/Button';\nimport copy from 'clipboard-copy';\nimport blackHeartIcon from \"../images/blackHeartIcon.svg\";\nimport shareIcon from \"../images/shareIcon.svg\";\nimport whiteHeartIcon from \"../images/whiteHeartIcon.svg\";\nimport Recommendation from './Recommendation';\nimport IngredientList from './IngredientList';\n\nclass ItemsDetails extends Component {\n  constructor() {\n    super();\n    this.state = {\n      copied: false,\n      favorited: false\n    };\n    this.handleClick = this.handleClick.bind(this);\n    this.handleProgress = this.handleProgress.bind(this);\n    this.handleFav = this.handleFav.bind(this);\n    this.handleBlackIcon = this.handleBlackIcon.bind(this);\n    this.ingredientesComQuantidades = this.ingredientesComQuantidades.bind(this);\n  }\n\n  componentDidMount() {\n    this.handleBlackIcon();\n  }\n\n  handleClick() {\n    const {\n      pathname\n    } = this.props;\n    const TWO_SECOND = 2000;\n    copy(`http://localhost:3000${pathname}`);\n    this.setState({\n      copied: true\n    }, () => {\n      setTimeout(() => {\n        this.setState({\n          copied: false\n        });\n      }, TWO_SECOND);\n    });\n  }\n\n  handleProgress(type, id) {\n    const {\n      history\n    } = this.props;\n    if (type === 'Meal') return history.push(`/comidas/${id}/in-progress`);\n    return history.push(`/bebidas/${id}/in-progress`);\n  }\n\n  handleFav(result, type) {\n    const itemId = result[`id${type}`];\n    const favorites = JSON.parse(localStorage.getItem('favoriteRecipes'));\n\n    if (favorites) {\n      const checkFav = favorites.find(favId => favId.id === itemId);\n\n      if (checkFav !== undefined) {\n        const filterFav = favorites.filter(favorite => itemId !== favorite.id);\n        return localStorage.setItem('favoriteRecipes', JSON.stringify(filterFav));\n      }\n\n      const fav = [...favorites, {\n        id: result[`id${type}`],\n        type: type === 'Meal' ? 'comida' : 'bebida',\n        area: result.strArea || '',\n        category: result.strCategory,\n        alcoholicOrNot: result.strAlcoholic || '',\n        name: result[`str${type}`],\n        image: result[`str${type}Thumb`]\n      }];\n      return localStorage.setItem('favoriteRecipes', JSON.stringify(fav));\n    }\n\n    localStorage.setItem('favoriteRecipes', JSON.stringify([{\n      id: result[`id${type}`],\n      type: type === 'Meal' ? 'comida' : 'bebida',\n      area: result.strArea || '',\n      category: result.strCategory,\n      alcoholicOrNot: result.strAlcoholic || '',\n      name: result[`str${type}`],\n      image: result[`str${type}Thumb`]\n    }]));\n  }\n\n  handleBlackIcon() {\n    const {\n      type,\n      result\n    } = this.props;\n    const id = result[`id${type}`];\n    const favorites = JSON.parse(localStorage.getItem('favoriteRecipes'));\n    let checkFav = false;\n    if (favorites) checkFav = favorites.find(favId => favId.id === id);\n    if (!checkFav || checkFav === undefined) return this.setState({\n      favorited: false\n    });\n    return this.setState({\n      favorited: true\n    });\n  }\n\n  juntar(chave, itemValue) {\n    return Object.entries(itemValue).map(nome => {\n      if (nome[0].includes(chave)) return nome[1];\n      return undefined;\n    }).filter(element => element !== undefined);\n  }\n\n  checkRecipeProgress(type, id) {\n    const inLocalStorage = JSON.parse(localStorage.getItem('inProgressRecipes'));\n\n    if (type === 'Meal' && inLocalStorage && inLocalStorage.meals) {\n      const filterId = Object.keys(inLocalStorage.meals).find(localId => id === localId);\n      if (filterId) return 'Continuar Receita';\n    }\n\n    if (type === 'Drink' && inLocalStorage && inLocalStorage.cocktails) {\n      const filterId = Object.keys(inLocalStorage.cocktails).find(localId => id === localId);\n      if (filterId) return 'Continuar Receita';\n    }\n\n    return 'Iniciar Receita';\n  }\n\n  ingredientesComQuantidades(itemValue) {\n    const {\n      pathname\n    } = this.props;\n    const ingredient = this.juntar('strIngredient', itemValue);\n    const measure = this.juntar('strMeasure', itemValue);\n    const splitUrl = pathname.split('/')[3];\n    return ingredient.map((nome, index) => {\n      if (nome) {\n        return /*#__PURE__*/React.createElement(IngredientList, {\n          splitUrl: splitUrl,\n          key: index,\n          index: index,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 11\n          }\n        }, `${nome} - ${measure[index]}`);\n      }\n\n      return undefined;\n    });\n  }\n\n  startRecipe(type, id) {\n    const inLocalStorage = JSON.parse(localStorage.getItem('inProgressRecipes'));\n\n    if (type === 'Meal') {\n      console.log(inLocalStorage);\n\n      if (inLocalStorage !== null) {\n        const newArray = { ...inLocalStorage,\n          meals: { ...inLocalStorage.meals,\n            [id]: []\n          }\n        };\n        localStorage.setItem('inProgressRecipes', JSON.stringify(newArray));\n        return;\n      }\n\n      const newArray = {\n        meals: {\n          [id]: []\n        }\n      };\n      localStorage.setItem('inProgressRecipes', JSON.stringify(newArray));\n    }\n\n    if (type === 'Drink') {\n      if (inLocalStorage !== null) {\n        const newArray = { ...inLocalStorage,\n          cocktails: { ...inLocalStorage.cocktails,\n            [id]: []\n          }\n        };\n        localStorage.setItem('inProgressRecipes', JSON.stringify(newArray));\n        return;\n      }\n\n      const newArray = {\n        cocktails: {\n          [id]: []\n        }\n      };\n      localStorage.setItem('inProgressRecipes', JSON.stringify(newArray));\n    }\n  }\n\n  render() {\n    const {\n      copied,\n      favorited\n    } = this.state;\n    const {\n      type,\n      result\n    } = this.props;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"img\", {\n      \"data-testid\": \"recipe-photo\",\n      src: result[`str${type}Thumb`],\n      alt: \"img\",\n      width: \"70px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }\n    }), result.strAlcoholic ? /*#__PURE__*/React.createElement(\"p\", {\n      \"data-testid\": \"recipe-category\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 11\n      }\n    }, result.strAlcoholic) : /*#__PURE__*/React.createElement(\"p\", {\n      \"data-testid\": \"recipe-category\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 11\n      }\n    }, result.strCategory), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      onClick: this.handleClick,\n      \"data-testid\": \"share-btn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: shareIcon,\n      alt: \"share icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 11\n      }\n    })), copied && /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 20\n      }\n    }, \"Link copiado!\"), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      onClick: () => {\n        this.handleFav(result, type);\n        this.handleBlackIcon(result[`id${type}`]);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      \"data-testid\": \"favorite-btn\",\n      src: favorited ? blackHeartIcon : whiteHeartIcon,\n      alt: \"favorite\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"h1\", {\n      \"data-testid\": \"recipe-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }\n    }, result[`str${type}`]), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }\n    }, result.strCategory), result.strYoutube && /*#__PURE__*/React.createElement(\"iframe\", {\n      title: \"video\",\n      \"data-testid\": \"video\",\n      src: result.strYoutube.replace('watch?v=', 'embed/'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 12\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }\n    }, this.ingredientesComQuantidades(result)), /*#__PURE__*/React.createElement(\"p\", {\n      \"data-testid\": \"instructions\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }\n    }, \"Instru\\xE7\\xF5es:\", result.strInstructions), /*#__PURE__*/React.createElement(Recommendation, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      className: \"start-recipe-btn\",\n      \"data-testid\": \"start-recipe-btn\",\n      variant: \"success\",\n      block: true,\n      onClick: () => {\n        this.startRecipe(type, result[`id${type}`]);\n        this.handleProgress(type, result[`id${type}`]);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }\n    }, this.checkRecipeProgress(type, result[`id${type}`])));\n  }\n\n}\n\nexport default ItemsDetails;\nItemsDetails.propTypes = {\n  type: PropTypes.string.isRequired,\n  result: PropTypes.objectOf(PropTypes.oneOfType([PropTypes.string, PropTypes.number])).isRequired,\n  pathname: PropTypes.string.isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func\n  })\n};\nItemsDetails.defaultProps = {\n  history: undefined\n};","map":{"version":3,"sources":["/home/usuario/projetos/sd-08-project-recipes-app/src/components/ItemsDetails.js"],"names":["React","Component","PropTypes","Button","copy","Recommendation","IngredientList","ItemsDetails","constructor","state","copied","favorited","handleClick","bind","handleProgress","handleFav","handleBlackIcon","ingredientesComQuantidades","componentDidMount","pathname","props","TWO_SECOND","setState","setTimeout","type","id","history","push","result","itemId","favorites","JSON","parse","localStorage","getItem","checkFav","find","favId","undefined","filterFav","filter","favorite","setItem","stringify","fav","area","strArea","category","strCategory","alcoholicOrNot","strAlcoholic","name","image","juntar","chave","itemValue","Object","entries","map","nome","includes","element","checkRecipeProgress","inLocalStorage","meals","filterId","keys","localId","cocktails","ingredient","measure","splitUrl","split","index","startRecipe","console","log","newArray","render","shareIcon","blackHeartIcon","whiteHeartIcon","strYoutube","replace","strInstructions","propTypes","string","isRequired","objectOf","oneOfType","number","shape","func","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,IAAP,MAAiB,gBAAjB;;;;AAIA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;AAEA,MAAMC,YAAN,SAA2BN,SAA3B,CAAqC;AACnCO,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAE,KADG;AAEXC,MAAAA,SAAS,EAAE;AAFA,KAAb;AAIA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACA,SAAKC,cAAL,GAAsB,KAAKA,cAAL,CAAoBD,IAApB,CAAyB,IAAzB,CAAtB;AACA,SAAKE,SAAL,GAAiB,KAAKA,SAAL,CAAeF,IAAf,CAAoB,IAApB,CAAjB;AACA,SAAKG,eAAL,GAAuB,KAAKA,eAAL,CAAqBH,IAArB,CAA0B,IAA1B,CAAvB;AACA,SAAKI,0BAAL,GAAkC,KAAKA,0BAAL,CAAgCJ,IAAhC,CAAqC,IAArC,CAAlC;AACD;;AAEDK,EAAAA,iBAAiB,GAAG;AAClB,SAAKF,eAAL;AACD;;AAEDJ,EAAAA,WAAW,GAAG;AACZ,UAAM;AAAEO,MAAAA;AAAF,QAAe,KAAKC,KAA1B;AACA,UAAMC,UAAU,GAAG,IAAnB;AACAjB,IAAAA,IAAI,CAAE,wBAAuBe,QAAS,EAAlC,CAAJ;AACA,SAAKG,QAAL,CAAc;AACZZ,MAAAA,MAAM,EAAE;AADI,KAAd,EAEG,MAAM;AACPa,MAAAA,UAAU,CAAC,MAAM;AACf,aAAKD,QAAL,CAAc;AAAEZ,UAAAA,MAAM,EAAE;AAAV,SAAd;AACD,OAFS,EAEPW,UAFO,CAAV;AAGD,KAND;AAOD;;AAEDP,EAAAA,cAAc,CAACU,IAAD,EAAOC,EAAP,EAAW;AACvB,UAAM;AAAEC,MAAAA;AAAF,QAAc,KAAKN,KAAzB;AACA,QAAII,IAAI,KAAK,MAAb,EAAqB,OAAOE,OAAO,CAACC,IAAR,CAAc,YAAWF,EAAG,cAA5B,CAAP;AACrB,WAAOC,OAAO,CAACC,IAAR,CAAc,YAAWF,EAAG,cAA5B,CAAP;AACD;;AAEDV,EAAAA,SAAS,CAACa,MAAD,EAASJ,IAAT,EAAe;AACtB,UAAMK,MAAM,GAAGD,MAAM,CAAE,KAAIJ,IAAK,EAAX,CAArB;AACA,UAAMM,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,iBAArB,CAAX,CAAlB;;AACA,QAAIJ,SAAJ,EAAe;AACb,YAAMK,QAAQ,GAAGL,SAAS,CAACM,IAAV,CAAgBC,KAAD,IAAWA,KAAK,CAACZ,EAAN,KAAaI,MAAvC,CAAjB;;AACA,UAAIM,QAAQ,KAAKG,SAAjB,EAA4B;AAC1B,cAAMC,SAAS,GAAGT,SAAS,CAACU,MAAV,CAAkBC,QAAD,IAAcZ,MAAM,KAAKY,QAAQ,CAAChB,EAAnD,CAAlB;AACA,eAAOQ,YAAY,CAACS,OAAb,CAAqB,iBAArB,EAAwCX,IAAI,CAACY,SAAL,CAAeJ,SAAf,CAAxC,CAAP;AACD;;AACD,YAAMK,GAAG,GAAG,CAAC,GAAGd,SAAJ,EACV;AACEL,QAAAA,EAAE,EAAEG,MAAM,CAAE,KAAIJ,IAAK,EAAX,CADZ;AAEEA,QAAAA,IAAI,EAAGA,IAAI,KAAK,MAAT,GAAkB,QAAlB,GAA6B,QAFtC;AAGEqB,QAAAA,IAAI,EAAEjB,MAAM,CAACkB,OAAP,IAAkB,EAH1B;AAIEC,QAAAA,QAAQ,EAAEnB,MAAM,CAACoB,WAJnB;AAKEC,QAAAA,cAAc,EAAErB,MAAM,CAACsB,YAAP,IAAuB,EALzC;AAMEC,QAAAA,IAAI,EAAEvB,MAAM,CAAE,MAAKJ,IAAK,EAAZ,CANd;AAOE4B,QAAAA,KAAK,EAAExB,MAAM,CAAE,MAAKJ,IAAK,OAAZ;AAPf,OADU,CAAZ;AAUA,aAAOS,YAAY,CAACS,OAAb,CAAqB,iBAArB,EAAwCX,IAAI,CAACY,SAAL,CAAeC,GAAf,CAAxC,CAAP;AACD;;AACDX,IAAAA,YAAY,CAACS,OAAb,CAAqB,iBAArB,EAAwCX,IAAI,CAACY,SAAL,CAAe,CAAC;AACtDlB,MAAAA,EAAE,EAAEG,MAAM,CAAE,KAAIJ,IAAK,EAAX,CAD4C;AAEtDA,MAAAA,IAAI,EAAGA,IAAI,KAAK,MAAT,GAAkB,QAAlB,GAA6B,QAFkB;AAGtDqB,MAAAA,IAAI,EAAEjB,MAAM,CAACkB,OAAP,IAAkB,EAH8B;AAItDC,MAAAA,QAAQ,EAAEnB,MAAM,CAACoB,WAJqC;AAKtDC,MAAAA,cAAc,EAAErB,MAAM,CAACsB,YAAP,IAAuB,EALe;AAMtDC,MAAAA,IAAI,EAAEvB,MAAM,CAAE,MAAKJ,IAAK,EAAZ,CAN0C;AAOtD4B,MAAAA,KAAK,EAAExB,MAAM,CAAE,MAAKJ,IAAK,OAAZ;AAPyC,KAAD,CAAf,CAAxC;AASD;;AAEDR,EAAAA,eAAe,GAAG;AAChB,UAAM;AAAEQ,MAAAA,IAAF;AAAQI,MAAAA;AAAR,QAAmB,KAAKR,KAA9B;AACA,UAAMK,EAAE,GAAGG,MAAM,CAAE,KAAIJ,IAAK,EAAX,CAAjB;AACA,UAAMM,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,iBAArB,CAAX,CAAlB;AACA,QAAIC,QAAQ,GAAG,KAAf;AACA,QAAIL,SAAJ,EAAeK,QAAQ,GAAGL,SAAS,CAACM,IAAV,CAAgBC,KAAD,IAAWA,KAAK,CAACZ,EAAN,KAAaA,EAAvC,CAAX;AACf,QAAI,CAACU,QAAD,IAAaA,QAAQ,KAAKG,SAA9B,EAAyC,OAAO,KAAKhB,QAAL,CAAc;AAAEX,MAAAA,SAAS,EAAE;AAAb,KAAd,CAAP;AACzC,WAAO,KAAKW,QAAL,CAAc;AAAEX,MAAAA,SAAS,EAAE;AAAb,KAAd,CAAP;AACD;;AAED0C,EAAAA,MAAM,CAACC,KAAD,EAAQC,SAAR,EAAmB;AACvB,WAAOC,MAAM,CAACC,OAAP,CAAeF,SAAf,EAA0BG,GAA1B,CAA+BC,IAAD,IAAU;AAC7C,UAAIA,IAAI,CAAC,CAAD,CAAJ,CAAQC,QAAR,CAAiBN,KAAjB,CAAJ,EAA6B,OAAOK,IAAI,CAAC,CAAD,CAAX;AAC7B,aAAOrB,SAAP;AACD,KAHM,EAGJE,MAHI,CAGIqB,OAAD,IAAaA,OAAO,KAAKvB,SAH5B,CAAP;AAID;;AAEDwB,EAAAA,mBAAmB,CAACtC,IAAD,EAAOC,EAAP,EAAW;AAC5B,UAAMsC,cAAc,GAAGhC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,mBAArB,CAAX,CAAvB;;AACA,QAAIV,IAAI,KAAK,MAAT,IAAmBuC,cAAnB,IAAqCA,cAAc,CAACC,KAAxD,EAA+D;AAC7D,YAAMC,QAAQ,GAAGT,MAAM,CAACU,IAAP,CAAYH,cAAc,CAACC,KAA3B,EACd5B,IADc,CACR+B,OAAD,IAAa1C,EAAE,KAAK0C,OADX,CAAjB;AAEA,UAAIF,QAAJ,EAAc,OAAO,mBAAP;AACf;;AACD,QAAIzC,IAAI,KAAK,OAAT,IAAoBuC,cAApB,IAAsCA,cAAc,CAACK,SAAzD,EAAoE;AAClE,YAAMH,QAAQ,GAAGT,MAAM,CAACU,IAAP,CAAYH,cAAc,CAACK,SAA3B,EACdhC,IADc,CACR+B,OAAD,IAAa1C,EAAE,KAAK0C,OADX,CAAjB;AAEA,UAAIF,QAAJ,EAAc,OAAO,mBAAP;AACf;;AACD,WAAO,iBAAP;AACD;;AAEDhD,EAAAA,0BAA0B,CAACsC,SAAD,EAAY;AACpC,UAAM;AAAEpC,MAAAA;AAAF,QAAe,KAAKC,KAA1B;AACA,UAAMiD,UAAU,GAAG,KAAKhB,MAAL,CAAY,eAAZ,EAA6BE,SAA7B,CAAnB;AACA,UAAMe,OAAO,GAAG,KAAKjB,MAAL,CAAY,YAAZ,EAA0BE,SAA1B,CAAhB;AACA,UAAMgB,QAAQ,GAAGpD,QAAQ,CAACqD,KAAT,CAAe,GAAf,EAAoB,CAApB,CAAjB;AACA,WAAOH,UAAU,CAACX,GAAX,CAAe,CAACC,IAAD,EAAOc,KAAP,KAAiB;AACrC,UAAId,IAAJ,EAAU;AACR,4BACE,oBAAC,cAAD;AACE,UAAA,QAAQ,EAAGY,QADb;AAEE,UAAA,GAAG,EAAGE,KAFR;AAGE,UAAA,KAAK,EAAGA,KAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAKI,GAAEd,IAAK,MAAKW,OAAO,CAACG,KAAD,CAAQ,EAL/B,CADF;AASD;;AACD,aAAOnC,SAAP;AACD,KAbM,CAAP;AAcD;;AAEDoC,EAAAA,WAAW,CAAClD,IAAD,EAAOC,EAAP,EAAW;AACpB,UAAMsC,cAAc,GAAGhC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,mBAArB,CAAX,CAAvB;;AACA,QAAIV,IAAI,KAAK,MAAb,EAAqB;AACnBmD,MAAAA,OAAO,CAACC,GAAR,CAAYb,cAAZ;;AACA,UAAIA,cAAc,KAAK,IAAvB,EAA6B;AAC3B,cAAMc,QAAQ,GAAG,EAAE,GAAGd,cAAL;AACfC,UAAAA,KAAK,EAAE,EAAE,GAAGD,cAAc,CAACC,KAApB;AAA2B,aAACvC,EAAD,GAAM;AAAjC;AADQ,SAAjB;AAEAQ,QAAAA,YAAY,CAACS,OAAb,CAAqB,mBAArB,EAA0CX,IAAI,CAACY,SAAL,CAAekC,QAAf,CAA1C;AACA;AACD;;AACD,YAAMA,QAAQ,GAAG;AAAEb,QAAAA,KAAK,EAAE;AAAE,WAACvC,EAAD,GAAM;AAAR;AAAT,OAAjB;AACAQ,MAAAA,YAAY,CAACS,OAAb,CAAqB,mBAArB,EAA0CX,IAAI,CAACY,SAAL,CAAekC,QAAf,CAA1C;AACD;;AACD,QAAIrD,IAAI,KAAK,OAAb,EAAsB;AACpB,UAAIuC,cAAc,KAAK,IAAvB,EAA6B;AAC3B,cAAMc,QAAQ,GAAG,EAAE,GAAGd,cAAL;AACfK,UAAAA,SAAS,EAAE,EAAE,GAAGL,cAAc,CAACK,SAApB;AAA+B,aAAC3C,EAAD,GAAM;AAArC;AADI,SAAjB;AAEAQ,QAAAA,YAAY,CAACS,OAAb,CAAqB,mBAArB,EAA0CX,IAAI,CAACY,SAAL,CAAekC,QAAf,CAA1C;AACA;AACD;;AACD,YAAMA,QAAQ,GAAG;AAAET,QAAAA,SAAS,EAAE;AAAE,WAAC3C,EAAD,GAAM;AAAR;AAAb,OAAjB;AACAQ,MAAAA,YAAY,CAACS,OAAb,CAAqB,mBAArB,EAA0CX,IAAI,CAACY,SAAL,CAAekC,QAAf,CAA1C;AACD;AACF;;AAEDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEpE,MAAAA,MAAF;AAAUC,MAAAA;AAAV,QAAwB,KAAKF,KAAnC;AACA,UAAM;AAAEe,MAAAA,IAAF;AAAQI,MAAAA;AAAR,QAAmB,KAAKR,KAA9B;AAEA,wBACE,uDACE;AACE,qBAAY,cADd;AAEE,MAAA,GAAG,EAAGQ,MAAM,CAAE,MAAKJ,IAAK,OAAZ,CAFd;AAGE,MAAA,GAAG,EAAC,KAHN;AAIE,MAAA,KAAK,EAAC,MAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAOGI,MAAM,CAACsB,YAAP,gBACC;AAAG,qBAAY,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGtB,MAAM,CAACsB,YADV,CADD,gBAKC;AAAG,qBAAY,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGtB,MAAM,CAACoB,WADV,CAZJ,eAgBE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,OAAO,EAAG,KAAKpC,WAArC;AAAmD,qBAAY,WAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,GAAG,EAAGmE,SAAX;AAAuB,MAAA,GAAG,EAAC,YAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAhBF,EAmBGrE,MAAM,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAnBb,eAoBE;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,OAAO,EAAG,MAAM;AACd,aAAKK,SAAL,CAAea,MAAf,EAAuBJ,IAAvB;AACA,aAAKR,eAAL,CAAqBY,MAAM,CAAE,KAAIJ,IAAK,EAAX,CAA3B;AACD,OALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAOE;AACE,qBAAY,cADd;AAEE,MAAA,GAAG,EAAGb,SAAS,GAAGqE,cAAH,GACXC,cAHN;AAIE,MAAA,GAAG,EAAC,UAJN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPF,CApBF,eAkCE;AAAI,qBAAY,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiCrD,MAAM,CAAE,MAAKJ,IAAK,EAAZ,CAAvC,CAlCF,eAmCE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACII,MAAM,CAACoB,WADX,CAnCF,EAsCGpB,MAAM,CAACsD,UAAP,iBACE;AACD,MAAA,KAAK,EAAC,OADL;AAED,qBAAY,OAFX;AAGD,MAAA,GAAG,EAAGtD,MAAM,CAACsD,UAAP,CAAkBC,OAAlB,CAA0B,UAA1B,EAAsC,QAAtC,CAHL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAvCL,eA4CE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKlE,0BAAL,CAAgCW,MAAhC,CADH,CA5CF,eA+CE;AAAG,qBAAY,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAEGA,MAAM,CAACwD,eAFV,CA/CF,eAmDE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAnDF,eAoDE,oBAAC,MAAD;AACE,MAAA,SAAS,EAAC,kBADZ;AAEE,qBAAY,kBAFd;AAGE,MAAA,OAAO,EAAC,SAHV;AAIE,MAAA,KAAK,MAJP;AAKE,MAAA,OAAO,EAAG,MAAM;AACd,aAAKV,WAAL,CAAiBlD,IAAjB,EAAuBI,MAAM,CAAE,KAAIJ,IAAK,EAAX,CAA7B;AACA,aAAKV,cAAL,CAAoBU,IAApB,EAA0BI,MAAM,CAAE,KAAIJ,IAAK,EAAX,CAAhC;AACD,OARH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAUG,KAAKsC,mBAAL,CAAyBtC,IAAzB,EAA+BI,MAAM,CAAE,KAAIJ,IAAK,EAAX,CAArC,CAVH,CApDF,CADF;AAmED;;AA1NkC;;AA6NrC,eAAejB,YAAf;AAEAA,YAAY,CAAC8E,SAAb,GAAyB;AACvB7D,EAAAA,IAAI,EAAEtB,SAAS,CAACoF,MAAV,CAAiBC,UADA;AAEvB3D,EAAAA,MAAM,EAAE1B,SAAS,CAACsF,QAAV,CAAmBtF,SAAS,CAACuF,SAAV,CAAoB,CAC7CvF,SAAS,CAACoF,MADmC,EAE7CpF,SAAS,CAACwF,MAFmC,CAApB,CAAnB,EAGJH,UALmB;AAMvBpE,EAAAA,QAAQ,EAAEjB,SAAS,CAACoF,MAAV,CAAiBC,UANJ;AAOvB7D,EAAAA,OAAO,EAAExB,SAAS,CAACyF,KAAV,CAAgB;AACvBhE,IAAAA,IAAI,EAAEzB,SAAS,CAAC0F;AADO,GAAhB;AAPc,CAAzB;AAYArF,YAAY,CAACsF,YAAb,GAA4B;AAC1BnE,EAAAA,OAAO,EAAEY;AADiB,CAA5B","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Button from 'react-bootstrap/Button';\nimport copy from 'clipboard-copy';\nimport blackHeartIcon from '../images/blackHeartIcon.svg';\nimport shareIcon from '../images/shareIcon.svg';\nimport whiteHeartIcon from '../images/whiteHeartIcon.svg';\nimport Recommendation from './Recommendation';\nimport IngredientList from './IngredientList';\n\nclass ItemsDetails extends Component {\n  constructor() {\n    super();\n    this.state = {\n      copied: false,\n      favorited: false,\n    };\n    this.handleClick = this.handleClick.bind(this);\n    this.handleProgress = this.handleProgress.bind(this);\n    this.handleFav = this.handleFav.bind(this);\n    this.handleBlackIcon = this.handleBlackIcon.bind(this);\n    this.ingredientesComQuantidades = this.ingredientesComQuantidades.bind(this);\n  }\n\n  componentDidMount() {\n    this.handleBlackIcon();\n  }\n\n  handleClick() {\n    const { pathname } = this.props;\n    const TWO_SECOND = 2000;\n    copy(`http://localhost:3000${pathname}`);\n    this.setState({\n      copied: true,\n    }, () => {\n      setTimeout(() => {\n        this.setState({ copied: false });\n      }, TWO_SECOND);\n    });\n  }\n\n  handleProgress(type, id) {\n    const { history } = this.props;\n    if (type === 'Meal') return history.push(`/comidas/${id}/in-progress`);\n    return history.push(`/bebidas/${id}/in-progress`);\n  }\n\n  handleFav(result, type) {\n    const itemId = result[`id${type}`];\n    const favorites = JSON.parse(localStorage.getItem('favoriteRecipes'));\n    if (favorites) {\n      const checkFav = favorites.find((favId) => favId.id === itemId);\n      if (checkFav !== undefined) {\n        const filterFav = favorites.filter((favorite) => itemId !== favorite.id);\n        return localStorage.setItem('favoriteRecipes', JSON.stringify(filterFav));\n      }\n      const fav = [...favorites,\n        {\n          id: result[`id${type}`],\n          type: (type === 'Meal' ? 'comida' : 'bebida'),\n          area: result.strArea || '',\n          category: result.strCategory,\n          alcoholicOrNot: result.strAlcoholic || '',\n          name: result[`str${type}`],\n          image: result[`str${type}Thumb`],\n        }];\n      return localStorage.setItem('favoriteRecipes', JSON.stringify(fav));\n    }\n    localStorage.setItem('favoriteRecipes', JSON.stringify([{\n      id: result[`id${type}`],\n      type: (type === 'Meal' ? 'comida' : 'bebida'),\n      area: result.strArea || '',\n      category: result.strCategory,\n      alcoholicOrNot: result.strAlcoholic || '',\n      name: result[`str${type}`],\n      image: result[`str${type}Thumb`],\n    }]));\n  }\n\n  handleBlackIcon() {\n    const { type, result } = this.props;\n    const id = result[`id${type}`];\n    const favorites = JSON.parse(localStorage.getItem('favoriteRecipes'));\n    let checkFav = false;\n    if (favorites) checkFav = favorites.find((favId) => favId.id === id);\n    if (!checkFav || checkFav === undefined) return this.setState({ favorited: false });\n    return this.setState({ favorited: true });\n  }\n\n  juntar(chave, itemValue) {\n    return Object.entries(itemValue).map((nome) => {\n      if (nome[0].includes(chave)) return nome[1];\n      return undefined;\n    }).filter((element) => element !== undefined);\n  }\n\n  checkRecipeProgress(type, id) {\n    const inLocalStorage = JSON.parse(localStorage.getItem('inProgressRecipes'));\n    if (type === 'Meal' && inLocalStorage && inLocalStorage.meals) {\n      const filterId = Object.keys(inLocalStorage.meals)\n        .find((localId) => id === localId);\n      if (filterId) return 'Continuar Receita';\n    }\n    if (type === 'Drink' && inLocalStorage && inLocalStorage.cocktails) {\n      const filterId = Object.keys(inLocalStorage.cocktails)\n        .find((localId) => id === localId);\n      if (filterId) return 'Continuar Receita';\n    }\n    return 'Iniciar Receita';\n  }\n\n  ingredientesComQuantidades(itemValue) {\n    const { pathname } = this.props;\n    const ingredient = this.juntar('strIngredient', itemValue);\n    const measure = this.juntar('strMeasure', itemValue);\n    const splitUrl = pathname.split('/')[3];\n    return ingredient.map((nome, index) => {\n      if (nome) {\n        return (\n          <IngredientList\n            splitUrl={ splitUrl }\n            key={ index }\n            index={ index }\n          >\n            {`${nome} - ${measure[index]}`}\n          </IngredientList>\n        );\n      }\n      return undefined;\n    });\n  }\n\n  startRecipe(type, id) {\n    const inLocalStorage = JSON.parse(localStorage.getItem('inProgressRecipes'));\n    if (type === 'Meal') {\n      console.log(inLocalStorage);\n      if (inLocalStorage !== null) {\n        const newArray = { ...inLocalStorage,\n          meals: { ...inLocalStorage.meals, [id]: [] } };\n        localStorage.setItem('inProgressRecipes', JSON.stringify(newArray));\n        return;\n      }\n      const newArray = { meals: { [id]: [] } };\n      localStorage.setItem('inProgressRecipes', JSON.stringify(newArray));\n    }\n    if (type === 'Drink') {\n      if (inLocalStorage !== null) {\n        const newArray = { ...inLocalStorage,\n          cocktails: { ...inLocalStorage.cocktails, [id]: [] } };\n        localStorage.setItem('inProgressRecipes', JSON.stringify(newArray));\n        return;\n      }\n      const newArray = { cocktails: { [id]: [] } };\n      localStorage.setItem('inProgressRecipes', JSON.stringify(newArray));\n    }\n  }\n\n  render() {\n    const { copied, favorited } = this.state;\n    const { type, result } = this.props;\n\n    return (\n      <>\n        <img\n          data-testid=\"recipe-photo\"\n          src={ result[`str${type}Thumb`] }\n          alt=\"img\"\n          width=\"70px\"\n        />\n        {result.strAlcoholic ? (\n          <p data-testid=\"recipe-category\">\n            {result.strAlcoholic}\n          </p>\n        ) : (\n          <p data-testid=\"recipe-category\">\n            {result.strCategory}\n          </p>\n        )}\n        <button type=\"button\" onClick={ this.handleClick } data-testid=\"share-btn\">\n          <img src={ shareIcon } alt=\"share icon\" />\n        </button>\n        {copied && <span>Link copiado!</span>}\n        <button\n          type=\"button\"\n          onClick={ () => {\n            this.handleFav(result, type);\n            this.handleBlackIcon(result[`id${type}`]);\n          } }\n        >\n          <img\n            data-testid=\"favorite-btn\"\n            src={ favorited ? blackHeartIcon\n              : whiteHeartIcon }\n            alt=\"favorite\"\n          />\n        </button>\n        <h1 data-testid=\"recipe-title\">{ result[`str${type}`] }</h1>\n        <p>\n          { result.strCategory }\n        </p>\n        {result.strYoutube\n        && <iframe\n          title=\"video\"\n          data-testid=\"video\"\n          src={ result.strYoutube.replace('watch?v=', 'embed/') }\n        />}\n        <div>\n          {this.ingredientesComQuantidades(result)}\n        </div>\n        <p data-testid=\"instructions\">\n          Instruções:\n          {result.strInstructions}\n        </p>\n        <Recommendation />\n        <Button\n          className=\"start-recipe-btn\"\n          data-testid=\"start-recipe-btn\"\n          variant=\"success\"\n          block\n          onClick={ () => {\n            this.startRecipe(type, result[`id${type}`]);\n            this.handleProgress(type, result[`id${type}`]);\n          } }\n        >\n          {this.checkRecipeProgress(type, result[`id${type}`])}\n        </Button>\n      </>\n    );\n  }\n}\n\nexport default ItemsDetails;\n\nItemsDetails.propTypes = {\n  type: PropTypes.string.isRequired,\n  result: PropTypes.objectOf(PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n  ])).isRequired,\n  pathname: PropTypes.string.isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func,\n  }),\n};\n\nItemsDetails.defaultProps = {\n  history: undefined,\n};\n"]},"metadata":{},"sourceType":"module"}
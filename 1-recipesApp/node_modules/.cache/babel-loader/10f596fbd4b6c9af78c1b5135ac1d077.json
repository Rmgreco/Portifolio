{"ast":null,"code":"var _jsxFileName = \"/home/usuario/projetos/sd-08-project-recipes-app/src/components/Filtros.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { fetchIngredient as fetchIngredientAction } from '../action';\n\nclass Filtros extends Component {\n  constructor() {\n    super();\n    this.state = {\n      results: []\n    };\n    this.fetchList = this.fetchList.bind(this);\n  }\n\n  componentDidMount() {\n    this.fetchList();\n  }\n\n  async fetchList() {\n    const {\n      pathname\n    } = this.props;\n\n    if (pathname === '/comidas') {\n      const req = await fetch('https://www.themealdb.com/api/json/v1/1/list.php?c=list');\n      const results = await req.json();\n      this.setState({\n        results\n      });\n    }\n\n    if (pathname === '/bebidas') {\n      const req = await fetch('https://www.thecocktaildb.com/api/json/v1/1/list.php?c=list');\n      const results = await req.json();\n      this.setState({\n        results\n      });\n    }\n  }\n\n  filterAll(pathname, searchIngredient) {\n    const mealUrl = 'https://www.themealdb.com/api/json/v1/1/search.php?s=';\n    const drinkUrl = 'https://www.thecocktaildb.com/api/json/v1/1/search.php?s=';\n\n    if (pathname === '/comidas') {\n      return searchIngredient(mealUrl);\n    }\n\n    if (pathname === '/bebidas') {\n      return searchIngredient(drinkUrl);\n    }\n  }\n\n  submitSearch(category) {\n    const {\n      pathname,\n      searchIngredient\n    } = this.props;\n    const mealUrl = `https://www.themealdb.com/api/json/v1/1/filter.php?c=${category}`;\n    const drinkUrl = `https://www.thecocktaildb.com/api/json/v1/1/filter.php?c=${category}`;\n\n    if (pathname === '/comidas') {\n      return searchIngredient(mealUrl);\n    }\n\n    if (pathname === '/bebidas') {\n      return searchIngredient(drinkUrl);\n    }\n  }\n\n  render() {\n    const {\n      results\n    } = this.state;\n    const {\n      pathname,\n      searchIngredient\n    } = this.props;\n    const result = results.meals || results.drinks;\n    const TOTAL_ITEMS = 4;\n    return /*#__PURE__*/React.createElement(\"nav\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      \"data-testid\": \"All-category-filter\",\n      type: \"button\",\n      onClick: () => this.filterAll(pathname, searchIngredient),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }\n    }, \"All\"), results.length !== 0 && result.map((category, index) => {\n      if (index > TOTAL_ITEMS) {\n        return null;\n      }\n\n      return /*#__PURE__*/React.createElement(\"button\", {\n        \"data-testid\": `${category.strCategory}-category-filter`,\n        key: category.strCategory,\n        type: \"button\",\n        onClick: () => this.submitSearch(category.strCategory),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }\n      }, category.strCategory);\n    }));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  searchIngredient: url => dispatch(fetchIngredientAction(url))\n});\n\nexport default connect(null, mapDispatchToProps)(Filtros);\nFiltros.propTypes = {\n  pathname: PropTypes.string.isRequired,\n  searchIngredient: PropTypes.func.isRequired\n};","map":{"version":3,"sources":["/home/usuario/projetos/sd-08-project-recipes-app/src/components/Filtros.js"],"names":["React","Component","connect","PropTypes","fetchIngredient","fetchIngredientAction","Filtros","constructor","state","results","fetchList","bind","componentDidMount","pathname","props","req","fetch","json","setState","filterAll","searchIngredient","mealUrl","drinkUrl","submitSearch","category","render","result","meals","drinks","TOTAL_ITEMS","length","map","index","strCategory","mapDispatchToProps","dispatch","url","propTypes","string","isRequired","func"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { fetchIngredient as fetchIngredientAction } from '../action';\n\nclass Filtros extends Component {\n  constructor() {\n    super();\n    this.state = {\n      results: [],\n    };\n\n    this.fetchList = this.fetchList.bind(this);\n  }\n\n  componentDidMount() {\n    this.fetchList();\n  }\n\n  async fetchList() {\n    const { pathname } = this.props;\n    if (pathname === '/comidas') {\n      const req = await fetch('https://www.themealdb.com/api/json/v1/1/list.php?c=list');\n      const results = await req.json();\n      this.setState({ results });\n    }\n    if (pathname === '/bebidas') {\n      const req = await fetch('https://www.thecocktaildb.com/api/json/v1/1/list.php?c=list');\n      const results = await req.json();\n      this.setState({ results });\n    }\n  }\n\n  filterAll(pathname, searchIngredient) {\n    const mealUrl = 'https://www.themealdb.com/api/json/v1/1/search.php?s=';\n    const drinkUrl = 'https://www.thecocktaildb.com/api/json/v1/1/search.php?s=';\n    if (pathname === '/comidas') {\n      return searchIngredient(mealUrl);\n    }\n    if (pathname === '/bebidas') {\n      return searchIngredient(drinkUrl);\n    }\n  }\n\n  submitSearch(category) {\n    const { pathname, searchIngredient } = this.props;\n    const mealUrl = `https://www.themealdb.com/api/json/v1/1/filter.php?c=${category}`;\n    const drinkUrl = `https://www.thecocktaildb.com/api/json/v1/1/filter.php?c=${category}`;\n    if (pathname === '/comidas') {\n      return searchIngredient(mealUrl);\n    }\n    if (pathname === '/bebidas') {\n      return searchIngredient(drinkUrl);\n    }\n  }\n\n  render() {\n    const { results } = this.state;\n    const { pathname, searchIngredient } = this.props;\n    const result = results.meals || results.drinks;\n    const TOTAL_ITEMS = 4;\n    return (\n      <nav>\n        <button\n          data-testid=\"All-category-filter\"\n          type=\"button\"\n          onClick={ () => this.filterAll(pathname, searchIngredient) }\n        >\n          All\n        </button>\n        {results.length !== 0 && result.map((category, index) => {\n          if (index > TOTAL_ITEMS) {\n            return null;\n          }\n          return (\n            <button\n              data-testid={ `${category.strCategory}-category-filter` }\n              key={ category.strCategory }\n              type=\"button\"\n              onClick={ () => this.submitSearch(category.strCategory) }\n            >\n              {category.strCategory}\n            </button>\n          );\n        })}\n      </nav>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  searchIngredient: (url) => dispatch(fetchIngredientAction(url)),\n});\n\nexport default connect(null, mapDispatchToProps)(Filtros);\n\nFiltros.propTypes = {\n  pathname: PropTypes.string.isRequired,\n  searchIngredient: PropTypes.func.isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}
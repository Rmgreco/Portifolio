{"ast":null,"code":"var _jsxFileName = \"/home/usuario/projetos/sd-08-project-recipes-app/src/components/ShowDoneRecipes.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport copy from 'clipboard-copy';\nimport blackHeartIcon from \"../images/blackHeartIcon.svg\";\nimport shareIcon from \"../images/shareIcon.svg\";\nexport default class ShowDoneRecipes extends Component {\n  constructor() {\n    super();\n    this.state = {\n      copied: {},\n      doneRecipes: []\n    };\n    this.copyRecipe = this.copyRecipe.bind(this);\n    this.fetchDoneRecipes = this.fetchDoneRecipes.bind(this);\n  }\n\n  componentDidMount() {\n    this.fetchDoneRecipes();\n  }\n\n  fetchDoneRecipes() {\n    const doneRecipes = JSON.parse(localStorage.getItem('doneRecipes'));\n    if (doneRecipes) this.setState({\n      doneRecipes\n    });\n  }\n\n  copyRecipe(id, type, index) {\n    const {\n      copied\n    } = this.state;\n    let pathUrl = '';\n    if (type === 'comida') pathUrl = `/comidas/${id}`;\n    if (type === 'bebida') pathUrl = `/bebidas/${id}`;\n    const TWO_SECOND = 2000;\n    copy(`http://localhost:3000${pathUrl}`);\n    this.setState({\n      copied: { ...copied,\n        [index]: true\n      }\n    }, () => {\n      setTimeout(() => {\n        this.setState({\n          copied: { ...copied,\n            [index]: false\n          }\n        });\n      }, TWO_SECOND);\n    });\n  }\n\n  render() {\n    const {\n      copied,\n      doneRecipes\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }\n    }, doneRecipes && doneRecipes.map((item, index) => /*#__PURE__*/React.createElement(\"section\", {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: `/${item.type}s/${item.id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      \"data-testid\": `${index}-horizontal-image`,\n      src: item.image,\n      width: \"200px\",\n      alt: \"Recipe Pic\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 15\n      }\n    })), item.alcoholicOrNot ? /*#__PURE__*/React.createElement(\"p\", {\n      \"data-testid\": `${index}-horizontal-top-text`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 15\n      }\n    }, item.alcoholicOrNot) : /*#__PURE__*/React.createElement(\"p\", {\n      \"data-testid\": `${index}-horizontal-top-text`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }\n    }, `${item.area} - ${item.category}`), /*#__PURE__*/React.createElement(Link, {\n      to: `/${item.type}s/${item.id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      \"data-testid\": `${index}-horizontal-name`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 15\n      }\n    }, item.name)), /*#__PURE__*/React.createElement(\"p\", {\n      \"data-testid\": `${index}-horizontal-done-date`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }\n    }, item.doneDate), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      onClick: () => this.copyRecipe(item.id, item.type, index),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: shareIcon,\n      \"data-testid\": `${index}-horizontal-share-btn`,\n      alt: \"Share Icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: blackHeartIcon // data-testid={ `${index}-horizontal-share-btn` }\n      ,\n      alt: \"Favorite Icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 15\n      }\n    })), copied[index] && /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 31\n      }\n    }, \"Link copiado!\"), item.tags && item.tags.map(tagName => /*#__PURE__*/React.createElement(\"h5\", {\n      key: tagName,\n      \"data-testid\": `${index}-${tagName}-horizontal-tag`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 15\n      }\n    }, tagName)))));\n  }\n\n}","map":{"version":3,"sources":["/home/usuario/projetos/sd-08-project-recipes-app/src/components/ShowDoneRecipes.js"],"names":["React","Component","Link","copy","ShowDoneRecipes","constructor","state","copied","doneRecipes","copyRecipe","bind","fetchDoneRecipes","componentDidMount","JSON","parse","localStorage","getItem","setState","id","type","index","pathUrl","TWO_SECOND","setTimeout","render","map","item","image","alcoholicOrNot","area","category","name","doneDate","shareIcon","blackHeartIcon","tags","tagName"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,IAAP,MAAiB,gBAAjB;;;AAKA,eAAe,MAAMC,eAAN,SAA8BH,SAA9B,CAAwC;AACrDI,EAAAA,WAAW,GAAG;AACZ;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAE,EADG;AAEXC,MAAAA,WAAW,EAAE;AAFF,KAAb;AAKA,SAAKC,UAAL,GAAkB,KAAKA,UAAL,CAAgBC,IAAhB,CAAqB,IAArB,CAAlB;AACA,SAAKC,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBD,IAAtB,CAA2B,IAA3B,CAAxB;AACD;;AAEDE,EAAAA,iBAAiB,GAAG;AAClB,SAAKD,gBAAL;AACD;;AAEDA,EAAAA,gBAAgB,GAAG;AACjB,UAAMH,WAAW,GAAGK,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAX,CAApB;AACA,QAAIR,WAAJ,EAAiB,KAAKS,QAAL,CAAc;AAAET,MAAAA;AAAF,KAAd;AAClB;;AAEDC,EAAAA,UAAU,CAACS,EAAD,EAAKC,IAAL,EAAWC,KAAX,EAAkB;AAC1B,UAAM;AAAEb,MAAAA;AAAF,QAAa,KAAKD,KAAxB;AACA,QAAIe,OAAO,GAAG,EAAd;AACA,QAAIF,IAAI,KAAK,QAAb,EAAuBE,OAAO,GAAI,YAAWH,EAAG,EAAzB;AACvB,QAAIC,IAAI,KAAK,QAAb,EAAuBE,OAAO,GAAI,YAAWH,EAAG,EAAzB;AACvB,UAAMI,UAAU,GAAG,IAAnB;AACAnB,IAAAA,IAAI,CAAE,wBAAuBkB,OAAQ,EAAjC,CAAJ;AACA,SAAKJ,QAAL,CAAc;AACZV,MAAAA,MAAM,EAAE,EACN,GAAGA,MADG;AAEN,SAACa,KAAD,GAAS;AAFH;AADI,KAAd,EAKG,MAAM;AACPG,MAAAA,UAAU,CAAC,MAAM;AACf,aAAKN,QAAL,CAAc;AAAEV,UAAAA,MAAM,EAAE,EACtB,GAAGA,MADmB;AAEtB,aAACa,KAAD,GAAS;AAFa;AAAV,SAAd;AAID,OALS,EAKPE,UALO,CAAV;AAMD,KAZD;AAaD;;AAEDE,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEjB,MAAAA,MAAF;AAAUC,MAAAA;AAAV,QAA0B,KAAKF,KAArC;AACA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGE,WAAW,IAAIA,WAAW,CAACiB,GAAZ,CAAgB,CAACC,IAAD,EAAON,KAAP,kBAC9B;AAAS,MAAA,GAAG,EAAGA,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAI,IAAGM,IAAI,CAACP,IAAK,KAAIO,IAAI,CAACR,EAAG,EAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,qBAAe,GAAEE,KAAM,mBADzB;AAEE,MAAA,GAAG,EAAGM,IAAI,CAACC,KAFb;AAGE,MAAA,KAAK,EAAC,OAHR;AAIE,MAAA,GAAG,EAAC,YAJN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,EASGD,IAAI,CAACE,cAAL,gBACC;AAAG,qBAAe,GAAER,KAAM,sBAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGM,IAAI,CAACE,cADR,CADD,gBAMG;AAAG,qBAAe,GAAER,KAAM,sBAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,GAAEM,IAAI,CAACG,IAAK,MAAKH,IAAI,CAACI,QAAS,EADpC,CAfN,eAmBE,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAI,IAAGJ,IAAI,CAACP,IAAK,KAAIO,IAAI,CAACR,EAAG,EAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAI,qBAAe,GAAEE,KAAM,kBAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgDM,IAAI,CAACK,IAArD,CADF,CAnBF,eAsBE;AAAG,qBAAe,GAAEX,KAAM,uBAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAoDM,IAAI,CAACM,QAAzD,CAtBF,eAuBE;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,OAAO,EAAG,MAAM,KAAKvB,UAAL,CAAgBiB,IAAI,CAACR,EAArB,EAAyBQ,IAAI,CAACP,IAA9B,EAAoCC,KAApC,CAFlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAIE;AACE,MAAA,GAAG,EAAGa,SADR;AAEE,qBAAe,GAAEb,KAAM,uBAFzB;AAGE,MAAA,GAAG,EAAC,YAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,CAvBF,eAiCE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,GAAG,EAAGc,cADR,CAEE;AAFF;AAGE,MAAA,GAAG,EAAC,eAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAjCF,EAwCG3B,MAAM,CAACa,KAAD,CAAN,iBAAiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAxCpB,EAyCGM,IAAI,CAACS,IAAL,IAAaT,IAAI,CAACS,IAAL,CAAUV,GAAV,CAAeW,OAAD,iBAC1B;AACE,MAAA,GAAG,EAAGA,OADR;AAEE,qBAAe,GAAEhB,KAAM,IAAGgB,OAAQ,iBAFpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIGA,OAJH,CADY,CAzChB,CADc,CADlB,CADF;AAwDD;;AAtGoD","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport copy from 'clipboard-copy';\n\nimport blackHeartIcon from '../images/blackHeartIcon.svg';\nimport shareIcon from '../images/shareIcon.svg';\n\nexport default class ShowDoneRecipes extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      copied: {},\n      doneRecipes: [],\n    };\n\n    this.copyRecipe = this.copyRecipe.bind(this);\n    this.fetchDoneRecipes = this.fetchDoneRecipes.bind(this);\n  }\n\n  componentDidMount() {\n    this.fetchDoneRecipes();\n  }\n\n  fetchDoneRecipes() {\n    const doneRecipes = JSON.parse(localStorage.getItem('doneRecipes'));\n    if (doneRecipes) this.setState({ doneRecipes });\n  }\n\n  copyRecipe(id, type, index) {\n    const { copied } = this.state;\n    let pathUrl = '';\n    if (type === 'comida') pathUrl = `/comidas/${id}`;\n    if (type === 'bebida') pathUrl = `/bebidas/${id}`;\n    const TWO_SECOND = 2000;\n    copy(`http://localhost:3000${pathUrl}`);\n    this.setState({\n      copied: {\n        ...copied,\n        [index]: true,\n      },\n    }, () => {\n      setTimeout(() => {\n        this.setState({ copied: {\n          ...copied,\n          [index]: false,\n        } });\n      }, TWO_SECOND);\n    });\n  }\n\n  render() {\n    const { copied, doneRecipes } = this.state;\n    return (\n      <div>\n        {doneRecipes && doneRecipes.map((item, index) => (\n          <section key={ index }>\n            <Link to={ `/${item.type}s/${item.id}` }>\n              <img\n                data-testid={ `${index}-horizontal-image` }\n                src={ item.image }\n                width=\"200px\"\n                alt=\"Recipe Pic\"\n              />\n            </Link>\n            {item.alcoholicOrNot ? (\n              <p data-testid={ `${index}-horizontal-top-text` }>\n                {item.alcoholicOrNot}\n              </p>\n            )\n              : (\n                <p data-testid={ `${index}-horizontal-top-text` }>\n                  { `${item.area} - ${item.category}` }\n                </p>\n              )}\n            <Link to={ `/${item.type}s/${item.id}` }>\n              <h4 data-testid={ `${index}-horizontal-name` }>{item.name}</h4>\n            </Link>\n            <p data-testid={ `${index}-horizontal-done-date` }>{item.doneDate}</p>\n            <button\n              type=\"button\"\n              onClick={ () => this.copyRecipe(item.id, item.type, index) }\n            >\n              <img\n                src={ shareIcon }\n                data-testid={ `${index}-horizontal-share-btn` }\n                alt=\"Share Icon\"\n              />\n            </button>\n            <button type=\"button\">\n              <img\n                src={ blackHeartIcon }\n                // data-testid={ `${index}-horizontal-share-btn` }\n                alt=\"Favorite Icon\"\n              />\n            </button>\n            {copied[index] && <span>Link copiado!</span>}\n            {item.tags && item.tags.map((tagName) => (\n              <h5\n                key={ tagName }\n                data-testid={ `${index}-${tagName}-horizontal-tag` }\n              >\n                {tagName}\n              </h5>\n            ))}\n          </section>\n        ))}\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/usuario/projetos/sd-08-project-recipes-app/src/components/ShowDoneRecipes.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport copy from 'clipboard-copy';\nimport blackHeartIcon from \"../images/blackHeartIcon.svg\";\nimport shareIcon from \"../images/shareIcon.svg\";\nexport default class ShowDoneRecipes extends Component {\n  constructor() {\n    super();\n    this.state = {\n      copied: {}\n    };\n    this.copyRecipe = this.copyRecipe.bind(this);\n  }\n\n  copyRecipe(id, type, index) {\n    const {\n      copied\n    } = this.state;\n    let pathUrl = '';\n    if (type === 'comida') pathUrl = `/comidas/${id}`;\n    if (type === 'bebida') pathUrl = `/bebidas/${id}`;\n    const TWO_SECOND = 2000;\n    copy(`http://localhost:3000${pathUrl}`);\n    this.setState({\n      copied: { ...copied,\n        [index]: true\n      }\n    }, () => {\n      setTimeout(() => {\n        this.setState({\n          copied: { ...copied,\n            [index]: false\n          }\n        });\n      }, TWO_SECOND);\n    });\n  }\n\n  render() {\n    const {\n      copied\n    } = this.state;\n    const doneRecipes = JSON.parse(localStorage.getItem('doneRecipes'));\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }\n    }, doneRecipes && doneRecipes.map((item, index) => /*#__PURE__*/React.createElement(\"section\", {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: `/bebidas/${item.id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      \"data-testid\": `${index}-horizontal-image`,\n      src: item.image,\n      width: \"200px\",\n      alt: \"Recipe Pic\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 15\n      }\n    })), item.alcoholicOrNot ? /*#__PURE__*/React.createElement(\"p\", {\n      \"data-testid\": `${index}-horizontal-top-text`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 15\n      }\n    }, item.alcoholicOrNot) : /*#__PURE__*/React.createElement(\"p\", {\n      \"data-testid\": `${index}-horizontal-top-text`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }\n    }, `${item.area} - ${item.category}`), /*#__PURE__*/React.createElement(\"h4\", {\n      \"data-testid\": `${index}-horizontal-name`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }\n    }, item.name), /*#__PURE__*/React.createElement(\"p\", {\n      \"data-testid\": `${index}-horizontal-done-date`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }\n    }, item.doneDate), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      onClick: () => this.copyRecipe(item.id, item.type, index),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: shareIcon,\n      \"data-testid\": `${index}-horizontal-share-btn`,\n      alt: \"Share Icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: blackHeartIcon // data-testid={ `${index}-horizontal-share-btn` }\n      ,\n      alt: \"Favorite Icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 15\n      }\n    })), copied[index] && /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 31\n      }\n    }, \"Link copiado!\"), item.tags && item.tags.map(tagName => /*#__PURE__*/React.createElement(\"h5\", {\n      key: tagName,\n      \"data-testid\": `${index}-${tagName}-horizontal-tag`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 15\n      }\n    }, tagName)))));\n  }\n\n}","map":{"version":3,"sources":["/home/usuario/projetos/sd-08-project-recipes-app/src/components/ShowDoneRecipes.js"],"names":["React","Component","Link","copy","ShowDoneRecipes","constructor","state","copied","copyRecipe","bind","id","type","index","pathUrl","TWO_SECOND","setState","setTimeout","render","doneRecipes","JSON","parse","localStorage","getItem","map","item","image","alcoholicOrNot","area","category","name","doneDate","shareIcon","blackHeartIcon","tags","tagName"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport copy from 'clipboard-copy';\n\nimport blackHeartIcon from '../images/blackHeartIcon.svg';\nimport shareIcon from '../images/shareIcon.svg';\n\nexport default class ShowDoneRecipes extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      copied: {},\n    };\n\n    this.copyRecipe = this.copyRecipe.bind(this);\n  }\n\n  copyRecipe(id, type, index) {\n    const { copied } = this.state;\n    let pathUrl = '';\n    if (type === 'comida') pathUrl = `/comidas/${id}`;\n    if (type === 'bebida') pathUrl = `/bebidas/${id}`;\n    const TWO_SECOND = 2000;\n    copy(`http://localhost:3000${pathUrl}`);\n    this.setState({\n      copied: {\n        ...copied,\n        [index]: true,\n      },\n    }, () => {\n      setTimeout(() => {\n        this.setState({ copied: {\n          ...copied,\n          [index]: false,\n        } });\n      }, TWO_SECOND);\n    });\n  }\n\n  render() {\n    const { copied } = this.state;\n    const doneRecipes = JSON.parse(localStorage.getItem('doneRecipes'));\n    return (\n      <div>\n        {doneRecipes && doneRecipes.map((item, index) => (\n          <section key={ index }>\n            <Link to={`/bebidas/${item.id}`}>\n              <img\n                data-testid={ `${index}-horizontal-image` }\n                src={ item.image }\n                width=\"200px\"\n                alt=\"Recipe Pic\"\n              />\n            </Link>\n            {item.alcoholicOrNot ? (\n              <p data-testid={ `${index}-horizontal-top-text` }>\n                {item.alcoholicOrNot}\n              </p>\n            )\n              : (\n                <p data-testid={ `${index}-horizontal-top-text` }>\n                  { `${item.area} - ${item.category}` }\n                </p>\n              )}\n            <h4 data-testid={ `${index}-horizontal-name` }>{item.name}</h4>\n            <p data-testid={ `${index}-horizontal-done-date` }>{item.doneDate}</p>\n            <button\n              type=\"button\"\n              onClick={ () => this.copyRecipe(item.id, item.type, index) }\n            >\n              <img\n                src={ shareIcon }\n                data-testid={ `${index}-horizontal-share-btn` }\n                alt=\"Share Icon\"\n              />\n            </button>\n            <button type=\"button\">\n              <img\n                src={ blackHeartIcon }\n                // data-testid={ `${index}-horizontal-share-btn` }\n                alt=\"Favorite Icon\"\n              />\n            </button>\n            {copied[index] && <span>Link copiado!</span>}\n            {item.tags && item.tags.map((tagName) => (\n              <h5\n                key={ tagName }\n                data-testid={ `${index}-${tagName}-horizontal-tag` }\n              >\n                {tagName}\n              </h5>\n            ))}\n          </section>\n        ))}\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}
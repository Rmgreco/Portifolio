{"ast":null,"code":"var _jsxFileName = \"/home/usuario/projetos/sd-08-project-recipes-app/src/components/ListCard.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Card from './Card';\n\nclass ListCard extends Component {\n  render() {\n    const {\n      result,\n      infos\n    } = this.props;\n    const {\n      history\n    } = infos;\n    return /*#__PURE__*/React.createElement(\"section\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"card-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }\n    }, result && result.map((item, index) => {\n      const TOTAL_ITEMS = 12;\n\n      if (index >= TOTAL_ITEMS) {\n        return;\n      }\n\n      if (result.length === 1) {\n        const redirect = `${infos.linkRedirect}${item[infos.id]}`;\n        return history(redirect);\n      }\n\n      return /*#__PURE__*/React.createElement(Card, {\n        infos: infos,\n        key: item[infos.id],\n        value: item,\n        index: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 21\n        }\n      });\n    })));\n  }\n\n}\n\nconst mapStateToProps = ({\n  search: {\n    result,\n    isFetching\n  }\n}) => ({\n  result: result.meals || result.drinks,\n  isFetching\n});\n\nexport default connect(mapStateToProps)(ListCard);\nListCard.propTypes = {\n  result: PropTypes.arrayOf(PropTypes.object),\n  infos: PropTypes.shape({\n    id: PropTypes.string,\n    name: PropTypes.string,\n    thumb: PropTypes.string,\n    linkRedirect: PropTypes.string,\n    history: PropTypes.func.isRequired\n  })\n};\nListCard.defaultProps = {\n  result: [],\n  infos: {\n    id: '',\n    name: '',\n    thumb: '',\n    linkRedirect: ''\n  }\n};","map":{"version":3,"sources":["/home/usuario/projetos/sd-08-project-recipes-app/src/components/ListCard.js"],"names":["React","Component","connect","PropTypes","Card","ListCard","render","result","infos","props","history","map","item","index","TOTAL_ITEMS","length","redirect","linkRedirect","id","mapStateToProps","search","isFetching","meals","drinks","propTypes","arrayOf","object","shape","string","name","thumb","func","isRequired","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAOC,IAAP,MAAiB,QAAjB;;AAEA,MAAMC,QAAN,SAAuBJ,SAAvB,CAAiC;AAC/BK,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,MAAF;AAAUC,MAAAA;AAAV,QAAoB,KAAKC,KAA/B;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAcF,KAApB;AACA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAI,MAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGD,MAAM,IAAIA,MAAM,CAACI,GAAP,CAAW,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACrC,YAAMC,WAAW,GAAG,EAApB;;AACA,UAAID,KAAK,IAAIC,WAAb,EAA0B;AACxB;AACD;;AACD,UAAIP,MAAM,CAACQ,MAAP,KAAkB,CAAtB,EAAyB;AACvB,cAAMC,QAAQ,GAAI,GAAER,KAAK,CAACS,YAAa,GAAEL,IAAI,CAACJ,KAAK,CAACU,EAAP,CAAW,EAAxD;AACA,eAAOR,OAAO,CAACM,QAAD,CAAd;AACD;;AACD,0BAAQ,oBAAC,IAAD;AACN,QAAA,KAAK,EAAGR,KADF;AAEN,QAAA,GAAG,EAAGI,IAAI,CAACJ,KAAK,CAACU,EAAP,CAFJ;AAGN,QAAA,KAAK,EAAGN,IAHF;AAIN,QAAA,KAAK,EAAGC,KAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAR;AAMD,KAfU,CADb,CADF,CADF;AAsBD;;AA1B8B;;AA6BjC,MAAMM,eAAe,GAAI,CAAC;AAAEC,EAAAA,MAAM,EAAE;AAAEb,IAAAA,MAAF;AAAUc,IAAAA;AAAV;AAAV,CAAD,MAAyC;AAChEd,EAAAA,MAAM,EAAEA,MAAM,CAACe,KAAP,IAAgBf,MAAM,CAACgB,MADiC;AAEhEF,EAAAA;AAFgE,CAAzC,CAAzB;;AAKA,eAAenB,OAAO,CAACiB,eAAD,CAAP,CAAyBd,QAAzB,CAAf;AAEAA,QAAQ,CAACmB,SAAT,GAAqB;AACnBjB,EAAAA,MAAM,EAAEJ,SAAS,CAACsB,OAAV,CAAkBtB,SAAS,CAACuB,MAA5B,CADW;AAEnBlB,EAAAA,KAAK,EAAEL,SAAS,CAACwB,KAAV,CAAgB;AACrBT,IAAAA,EAAE,EAAEf,SAAS,CAACyB,MADO;AAErBC,IAAAA,IAAI,EAAE1B,SAAS,CAACyB,MAFK;AAGrBE,IAAAA,KAAK,EAAE3B,SAAS,CAACyB,MAHI;AAIrBX,IAAAA,YAAY,EAAEd,SAAS,CAACyB,MAJH;AAKrBlB,IAAAA,OAAO,EAAEP,SAAS,CAAC4B,IAAV,CAAeC;AALH,GAAhB;AAFY,CAArB;AAWA3B,QAAQ,CAAC4B,YAAT,GAAwB;AACtB1B,EAAAA,MAAM,EAAE,EADc;AAEtBC,EAAAA,KAAK,EAAE;AACLU,IAAAA,EAAE,EAAE,EADC;AAELW,IAAAA,IAAI,EAAE,EAFD;AAGLC,IAAAA,KAAK,EAAE,EAHF;AAILb,IAAAA,YAAY,EAAE;AAJT;AAFe,CAAxB","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport Card from './Card';\n\nclass ListCard extends Component {\n  render() {\n    const { result, infos } = this.props;\n    const { history } = infos;\n    return (\n      <section>\n        <ul className=\"card-list\">\n          {result && result.map((item, index) => {\n            const TOTAL_ITEMS = 12;\n            if (index >= TOTAL_ITEMS) {\n              return;\n            }\n            if (result.length === 1) {\n              const redirect = `${infos.linkRedirect}${item[infos.id]}`;\n              return history(redirect);\n            }\n            return (<Card\n              infos={ infos }\n              key={ item[infos.id] }\n              value={ item }\n              index={ index }\n            />);\n          })}\n        </ul>\n      </section>\n    );\n  }\n}\n\nconst mapStateToProps = (({ search: { result, isFetching } }) => ({\n  result: result.meals || result.drinks,\n  isFetching,\n}));\n\nexport default connect(mapStateToProps)(ListCard);\n\nListCard.propTypes = {\n  result: PropTypes.arrayOf(PropTypes.object),\n  infos: PropTypes.shape({\n    id: PropTypes.string,\n    name: PropTypes.string,\n    thumb: PropTypes.string,\n    linkRedirect: PropTypes.string,\n    history: PropTypes.func.isRequired,\n  }),\n};\n\nListCard.defaultProps = {\n  result: [],\n  infos: {\n    id: '',\n    name: '',\n    thumb: '',\n    linkRedirect: '',\n  },\n};\n"]},"metadata":{},"sourceType":"module"}
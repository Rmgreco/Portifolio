{"ast":null,"code":"var _jsxFileName = \"/home/usuario/projetos/sd-08-project-starwars-planets-search/src/components/Ordenar.js\";\nimport React, { useContext, useState } from 'react';\nimport PlanetsContext from '../context/PlanetsContext';\nexport default function Ordenar() {\n  const {\n    filters,\n    setFilters\n  } = useContext(PlanetsContext);\n  const [sortBy, setOrdenar] = useState({\n    column: 'name',\n    sort: 'ASC'\n  });\n  const {\n    column,\n    sort\n  } = sortBy;\n  const columns = ['name', 'rotation_period', 'orbital_period', 'diameter', 'climate', 'terrain', 'surface_water', 'population'];\n\n  const handleSort = () => {\n    setFilters({ ...filters,\n      order: {\n        column,\n        sort\n      }\n    });\n  };\n\n  const handleChange = ({\n    target\n  }) => {\n    setOrdenar({ ...sortBy,\n      [target.name]: target.value\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"select\", {\n    value: column,\n    name: \"column\",\n    onChange: handleChange,\n    \"data-testid\": \"column-sort\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, columns.map(columnOption => /*#__PURE__*/React.createElement(\"option\", {\n    key: columnOption,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }, columnOption))), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"ASC\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, \"Ascendente\", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"radio\",\n    \"data-testid\": \"column-sort-input-asc\",\n    value: \"ASC\",\n    id: \"ASC\",\n    name: \"sort\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"DESC\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, \"Descendente\", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"radio\",\n    \"data-testid\": \"column-sort-input-desc\",\n    value: \"DESC\",\n    id: \"DESC\",\n    onChange: handleChange,\n    name: \"sort\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    \"data-testid\": \"column-sort-button\",\n    onClick: handleSort,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, \"Ordenar\"));\n}","map":{"version":3,"sources":["/home/usuario/projetos/sd-08-project-starwars-planets-search/src/components/Ordenar.js"],"names":["React","useContext","useState","PlanetsContext","Ordenar","filters","setFilters","sortBy","setOrdenar","column","sort","columns","handleSort","order","handleChange","target","name","value","map","columnOption"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,OAAOC,cAAP,MAA2B,2BAA3B;AAEA,eAAe,SAASC,OAAT,GAAmB;AAChC,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAA0BL,UAAU,CAACE,cAAD,CAA1C;AAEA,QAAM,CAACI,MAAD,EAASC,UAAT,IAAuBN,QAAQ,CAAC;AACpCO,IAAAA,MAAM,EAAE,MAD4B;AAEpCC,IAAAA,IAAI,EAAE;AAF8B,GAAD,CAArC;AAKA,QAAM;AAAED,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAAmBH,MAAzB;AAEA,QAAMI,OAAO,GAAG,CACd,MADc,EAEd,iBAFc,EAGd,gBAHc,EAId,UAJc,EAKd,SALc,EAMd,SANc,EAOd,eAPc,EAQd,YARc,CAAhB;;AAWA,QAAMC,UAAU,GAAG,MAAM;AACvBN,IAAAA,UAAU,CAAC,EACT,GAAGD,OADM;AAETQ,MAAAA,KAAK,EAAE;AACLJ,QAAAA,MADK;AAELC,QAAAA;AAFK;AAFE,KAAD,CAAV;AAOD,GARD;;AAUA,QAAMI,YAAY,GAAG,CAAC;AAAEC,IAAAA;AAAF,GAAD,KAAgB;AACnCP,IAAAA,UAAU,CAAC,EACT,GAAGD,MADM;AAET,OAACQ,MAAM,CAACC,IAAR,GAAeD,MAAM,CAACE;AAFb,KAAD,CAAV;AAID,GALD;;AAOA,sBACE,uDACE;AACE,IAAA,KAAK,EAAGR,MADV;AAEE,IAAA,IAAI,EAAC,QAFP;AAGE,IAAA,QAAQ,EAAGK,YAHb;AAIE,mBAAY,aAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMGH,OAAO,CAACO,GAAR,CAAaC,YAAD,iBACX;AAAQ,IAAA,GAAG,EAAGA,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8BA,YAA9B,CADD,CANH,CADF,eAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,OAAO,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAEE;AACE,IAAA,IAAI,EAAC,OADP;AAEE,mBAAY,uBAFd;AAGE,IAAA,KAAK,EAAC,KAHR;AAIE,IAAA,EAAE,EAAC,KAJL;AAKE,IAAA,IAAI,EAAC,MALP;AAME,IAAA,QAAQ,EAAGL,YANb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,eAYE;AAAO,IAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAEE;AACE,IAAA,IAAI,EAAC,OADP;AAEE,mBAAY,wBAFd;AAGE,IAAA,KAAK,EAAC,MAHR;AAIE,IAAA,EAAE,EAAC,MAJL;AAKE,IAAA,QAAQ,EAAGA,YALb;AAME,IAAA,IAAI,EAAC,MANP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAZF,CAXF,eAmCE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,mBAAY,oBAAlC;AAAuD,IAAA,OAAO,EAAGF,UAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAnCF,CADF;AAyCD","sourcesContent":["import React, { useContext, useState } from 'react';\nimport PlanetsContext from '../context/PlanetsContext';\n\nexport default function Ordenar() {\n  const { filters, setFilters } = useContext(PlanetsContext);\n\n  const [sortBy, setOrdenar] = useState({\n    column: 'name',\n    sort: 'ASC',\n  });\n\n  const { column, sort } = sortBy;\n\n  const columns = [\n    'name',\n    'rotation_period',\n    'orbital_period',\n    'diameter',\n    'climate',\n    'terrain',\n    'surface_water',\n    'population',\n  ];\n\n  const handleSort = () => {\n    setFilters({\n      ...filters,\n      order: {\n        column,\n        sort,\n      },\n    });\n  };\n\n  const handleChange = ({ target }) => {\n    setOrdenar({\n      ...sortBy,\n      [target.name]: target.value,\n    });\n  };\n\n  return (\n    <>\n      <select\n        value={ column }\n        name=\"column\"\n        onChange={ handleChange }\n        data-testid=\"column-sort\"\n      >\n        {columns.map((columnOption) => (\n          <option key={ columnOption }>{columnOption}</option>\n        ))}\n      </select>\n      <span>\n        <label htmlFor=\"ASC\">\n          Ascendente\n          <input\n            type=\"radio\"\n            data-testid=\"column-sort-input-asc\"\n            value=\"ASC\"\n            id=\"ASC\"\n            name=\"sort\"\n            onChange={ handleChange }\n          />\n        </label>\n        <label htmlFor=\"DESC\">\n          Descendente\n          <input\n            type=\"radio\"\n            data-testid=\"column-sort-input-desc\"\n            value=\"DESC\"\n            id=\"DESC\"\n            onChange={ handleChange }\n            name=\"sort\"\n          />\n        </label>\n      </span>\n      <button type=\"button\" data-testid=\"column-sort-button\" onClick={ handleSort }>\n        Ordenar\n      </button>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}
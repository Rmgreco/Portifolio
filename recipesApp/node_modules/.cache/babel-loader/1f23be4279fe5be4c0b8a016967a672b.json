{"ast":null,"code":"var _jsxFileName = \"/home/usuario/projetos/sd-08-project-recipes-app/src/components/ListCard.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Card from './Card';\nimport { fetchIngredient as fetchIngredientAction } from '../action';\n\nclass ListCard extends Component {\n  componentDidMount() {\n    const {\n      searchIngredient,\n      params: {\n        defaultSearch\n      }\n    } = this.props;\n    const url = defaultSearch;\n    searchIngredient(url);\n  }\n\n  render() {\n    const {\n      result,\n      infos\n    } = this.props; // const { history } = infos;\n\n    return /*#__PURE__*/React.createElement(\"section\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"card-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }\n    }, result && result.length && result.map((item, index) => {\n      const TOTAL_ITEMS = 12;\n\n      if (index >= TOTAL_ITEMS) {\n        return null;\n      } // if (result.length === 1) {\n      //   const redirect = `${infos.linkRedirect}${item[infos.id]}`;\n      //   return history(redirect);\n      // }\n\n\n      return /*#__PURE__*/React.createElement(Card, {\n        infos: infos,\n        key: item[infos.name] ? item[infos.name] : Math.random() * 100,\n        value: item,\n        index: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }\n      });\n    })));\n  }\n\n}\n\nconst mapStateToProps = ({\n  search: {\n    result,\n    isFetching\n  }\n}) => ({\n  result: result.meals || result.drinks,\n  isFetching\n});\n\nconst mapDispatchToProps = dispatch => ({\n  searchIngredient: url => dispatch(fetchIngredientAction(url))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ListCard);\nListCard.propTypes = {\n  result: PropTypes.arrayOf(PropTypes.object),\n  infos: PropTypes.shape({\n    id: PropTypes.string,\n    name: PropTypes.string,\n    thumb: PropTypes.string,\n    linkRedirect: PropTypes.string,\n    history: PropTypes.func.isRequired\n  }),\n  params: PropTypes.shape({\n    url: PropTypes.shape({\n      byName: PropTypes.string.isRequired\n    }).isRequired,\n    defaultSearch: PropTypes.string.isRequired\n  }).isRequired,\n  searchIngredient: PropTypes.func.isRequired\n};\nListCard.defaultProps = {\n  result: [],\n  infos: {\n    id: '',\n    name: '',\n    thumb: '',\n    linkRedirect: ''\n  }\n};","map":{"version":3,"sources":["/home/usuario/projetos/sd-08-project-recipes-app/src/components/ListCard.js"],"names":["React","Component","connect","PropTypes","Card","fetchIngredient","fetchIngredientAction","ListCard","componentDidMount","searchIngredient","params","defaultSearch","props","url","render","result","infos","length","map","item","index","TOTAL_ITEMS","name","Math","random","mapStateToProps","search","isFetching","meals","drinks","mapDispatchToProps","dispatch","propTypes","arrayOf","object","shape","id","string","thumb","linkRedirect","history","func","isRequired","byName","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport Card from './Card';\nimport { fetchIngredient as fetchIngredientAction } from '../action';\n\nclass ListCard extends Component {\n  componentDidMount() {\n    const { searchIngredient,\n      params: { defaultSearch } } = this.props;\n    const url = defaultSearch;\n    searchIngredient(url);\n  }\n\n  render() {\n    const { result, infos } = this.props;\n    // const { history } = infos;\n    return (\n      <section>\n        <ul className=\"card-list\">\n          {result && result.length && result.map((item, index) => {\n            const TOTAL_ITEMS = 12;\n            if (index >= TOTAL_ITEMS) {\n              return null;\n            }\n            // if (result.length === 1) {\n            //   const redirect = `${infos.linkRedirect}${item[infos.id]}`;\n            //   return history(redirect);\n            // }\n            return (<Card\n              infos={ infos }\n              key={ item[infos.name] ? item[infos.name] : Math.random() * 100 }\n              value={ item }\n              index={ index }\n            />);\n          })}\n        </ul>\n      </section>\n    );\n  }\n}\n\nconst mapStateToProps = (({ search: { result, isFetching } }) => ({\n  result: result.meals || result.drinks,\n  isFetching,\n}));\n\nconst mapDispatchToProps = (dispatch) => ({\n  searchIngredient: (url) => dispatch(fetchIngredientAction(url)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ListCard);\n\nListCard.propTypes = {\n  result: PropTypes.arrayOf(PropTypes.object),\n  infos: PropTypes.shape({\n    id: PropTypes.string,\n    name: PropTypes.string,\n    thumb: PropTypes.string,\n    linkRedirect: PropTypes.string,\n    history: PropTypes.func.isRequired,\n  }),\n  params: PropTypes.shape({\n    url: PropTypes.shape({\n      byName: PropTypes.string.isRequired,\n    }).isRequired,\n    defaultSearch: PropTypes.string.isRequired,\n  }).isRequired,\n  searchIngredient: PropTypes.func.isRequired,\n};\n\nListCard.defaultProps = {\n  result: [],\n  infos: {\n    id: '',\n    name: '',\n    thumb: '',\n    linkRedirect: '',\n  },\n};\n"]},"metadata":{},"sourceType":"module"}
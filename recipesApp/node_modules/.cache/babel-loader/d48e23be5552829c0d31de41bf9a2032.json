{"ast":null,"code":"var _jsxFileName = \"/home/usuario/projetos/sd-08-project-recipes-app/src/components/Filtros.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { fetchIngredient as fetchIngredientAction } from '../action';\n\nclass Filtros extends Component {\n  constructor() {\n    super();\n    this.state = {\n      results: [],\n      filter: ''\n    };\n    this.fetchList = this.fetchList.bind(this);\n    this.handleFilter = this.handleFilter.bind(this);\n  }\n\n  componentDidMount() {\n    this.fetchList();\n  }\n\n  handleFilter({\n    target\n  }) {\n    const {\n      filter\n    } = this.state;\n\n    if (target.value === filter) {\n      return this.setState(() => ({\n        filter: ''\n      }), () => {\n        this.submitSearch();\n      });\n    }\n\n    this.setState(() => ({\n      filter: target.value\n    }), () => this.submitSearch());\n  }\n\n  async fetchList() {\n    const {\n      pathname\n    } = this.props;\n\n    if (pathname === '/comidas') {\n      const req = await fetch('https://www.themealdb.com/api/json/v1/1/list.php?c=list');\n      const results = await req.json();\n      this.setState({\n        results\n      });\n    }\n\n    if (pathname === '/bebidas') {\n      const req = await fetch('https://www.thecocktaildb.com/api/json/v1/1/list.php?c=list');\n      const results = await req.json();\n      this.setState({\n        results\n      });\n    }\n  }\n\n  filterAll(pathname, searchIngredient) {\n    const mealUrl = 'https://www.themealdb.com/api/json/v1/1/search.php?s=';\n    const drinkUrl = 'https://www.thecocktaildb.com/api/json/v1/1/search.php?s=';\n\n    if (pathname === '/comidas') {\n      return searchIngredient(mealUrl, true);\n    }\n\n    if (pathname === '/bebidas') {\n      return searchIngredient(drinkUrl, true);\n    }\n  }\n\n  submitSearch() {\n    const {\n      pathname,\n      searchIngredient\n    } = this.props;\n    const {\n      filter\n    } = this.state;\n    const mealUrl = `https://www.themealdb.com/api/json/v1/1/filter.php?c=${filter}`;\n    const drinkUrl = `https://www.thecocktaildb.com/api/json/v1/1/filter.php?c=${filter}`;\n\n    if (pathname === '/comidas') {\n      if (filter) return searchIngredient(mealUrl, true);\n      return searchIngredient('https://www.themealdb.com/api/json/v1/1/search.php?s=');\n    }\n\n    if (pathname === '/bebidas') {\n      if (filter) return searchIngredient(drinkUrl, true);\n      return searchIngredient('https://www.thecocktaildb.com/api/json/v1/1/search.php?s=');\n    }\n  }\n\n  render() {\n    const {\n      results\n    } = this.state;\n    const {\n      pathname,\n      searchIngredient\n    } = this.props;\n    const result = results.meals || results.drinks;\n    const TOTAL_ITEMS = 4;\n    return /*#__PURE__*/React.createElement(\"nav\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      \"data-testid\": \"All-category-filter\",\n      type: \"button\",\n      className: \"filter-buttons-search\",\n      onClick: () => this.filterAll(pathname, searchIngredient),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }\n    }, \"All\"), results.length !== 0 && result.map((category, index) => {\n      if (index > TOTAL_ITEMS) {\n        return null;\n      }\n\n      return /*#__PURE__*/React.createElement(\"button\", {\n        \"data-testid\": `${category.strCategory}-category-filter`,\n        key: category.strCategory,\n        type: \"button\",\n        className: \"filter-buttons-search\" // onClick={ () => this.submitSearch(category.strCategory) }\n        ,\n        onClick: this.handleFilter,\n        value: category.strCategory,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }\n      }, category.strCategory);\n    }));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  searchIngredient: (url, filterButton) => dispatch(fetchIngredientAction(url, filterButton))\n});\n\nexport default connect(null, mapDispatchToProps)(Filtros);\nFiltros.propTypes = {\n  pathname: PropTypes.string.isRequired,\n  searchIngredient: PropTypes.func.isRequired\n};","map":{"version":3,"sources":["/home/usuario/projetos/sd-08-project-recipes-app/src/components/Filtros.js"],"names":["React","Component","connect","PropTypes","fetchIngredient","fetchIngredientAction","Filtros","constructor","state","results","filter","fetchList","bind","handleFilter","componentDidMount","target","value","setState","submitSearch","pathname","props","req","fetch","json","filterAll","searchIngredient","mealUrl","drinkUrl","render","result","meals","drinks","TOTAL_ITEMS","length","map","category","index","strCategory","mapDispatchToProps","dispatch","url","filterButton","propTypes","string","isRequired","func"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { fetchIngredient as fetchIngredientAction } from '../action';\n\nclass Filtros extends Component {\n  constructor() {\n    super();\n    this.state = {\n      results: [],\n      filter: '',\n    };\n\n    this.fetchList = this.fetchList.bind(this);\n    this.handleFilter = this.handleFilter.bind(this);\n  }\n\n  componentDidMount() {\n    this.fetchList();\n  }\n\n  handleFilter({ target }) {\n    const { filter } = this.state;\n    if (target.value === filter) {\n      return this.setState(() => ({ filter: '' }), () => {\n        this.submitSearch();\n      });\n    }\n    this.setState(() => ({ filter: target.value }), () => this.submitSearch());\n  }\n\n  async fetchList() {\n    const { pathname } = this.props;\n    if (pathname === '/comidas') {\n      const req = await fetch('https://www.themealdb.com/api/json/v1/1/list.php?c=list');\n      const results = await req.json();\n      this.setState({ results });\n    }\n    if (pathname === '/bebidas') {\n      const req = await fetch('https://www.thecocktaildb.com/api/json/v1/1/list.php?c=list');\n      const results = await req.json();\n      this.setState({ results });\n    }\n  }\n\n  filterAll(pathname, searchIngredient) {\n    const mealUrl = 'https://www.themealdb.com/api/json/v1/1/search.php?s=';\n    const drinkUrl = 'https://www.thecocktaildb.com/api/json/v1/1/search.php?s=';\n    if (pathname === '/comidas') {\n      return searchIngredient(mealUrl, true);\n    }\n    if (pathname === '/bebidas') {\n      return searchIngredient(drinkUrl, true);\n    }\n  }\n\n  submitSearch() {\n    const { pathname, searchIngredient } = this.props;\n    const { filter } = this.state;\n    const mealUrl = `https://www.themealdb.com/api/json/v1/1/filter.php?c=${filter}`;\n    const drinkUrl = `https://www.thecocktaildb.com/api/json/v1/1/filter.php?c=${filter}`;\n    if (pathname === '/comidas') {\n      if (filter) return searchIngredient(mealUrl, true);\n      return searchIngredient('https://www.themealdb.com/api/json/v1/1/search.php?s=');\n    }\n    if (pathname === '/bebidas') {\n      if (filter) return searchIngredient(drinkUrl, true);\n      return searchIngredient('https://www.thecocktaildb.com/api/json/v1/1/search.php?s=');\n    }\n  }\n\n  render() {\n    const { results } = this.state;\n    const { pathname, searchIngredient } = this.props;\n    const result = results.meals || results.drinks;\n    const TOTAL_ITEMS = 4;\n    return (\n      <nav>\n        <button\n          data-testid=\"All-category-filter\"\n          type=\"button\"\n          className=\"filter-buttons-search\"\n          onClick={ () => this.filterAll(pathname, searchIngredient) }\n        >\n          All\n        </button>\n        {results.length !== 0 && result.map((category, index) => {\n          if (index > TOTAL_ITEMS) {\n            return null;\n          }\n          return (\n            <button\n              data-testid={ `${category.strCategory}-category-filter` }\n              key={ category.strCategory }\n              type=\"button\"\n              className=\"filter-buttons-search\"\n              // onClick={ () => this.submitSearch(category.strCategory) }\n              onClick={ this.handleFilter }\n              value={ category.strCategory }\n            >\n              {category.strCategory}\n            </button>\n          );\n        })}\n      </nav>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  searchIngredient: (url, filterButton) => dispatch(\n    fetchIngredientAction(url, filterButton),\n  ),\n});\n\nexport default connect(null, mapDispatchToProps)(Filtros);\n\nFiltros.propTypes = {\n  pathname: PropTypes.string.isRequired,\n  searchIngredient: PropTypes.func.isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}
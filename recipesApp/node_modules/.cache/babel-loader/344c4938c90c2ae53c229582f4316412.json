{"ast":null,"code":"var _jsxFileName = \"/home/usuario/portfolio/recipesApp/src/components/RenderButton.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Button from 'react-bootstrap/Button';\nexport default class RenderButton extends Component {\n  doneRecipesBtn() {\n    const {\n      recipe,\n      type\n    } = this.props;\n    const doneRecipes = JSON.parse(localStorage.getItem('doneRecipes'));\n    let tags = '';\n\n    if (recipe.strTags) {\n      tags = recipe.strTags.split(',').filter((_, index) => index < 2);\n    }\n\n    console.log(tags);\n    const obj = {\n      id: recipe[`id${type}`],\n      type: type === 'Meal' ? 'comida' : 'bebida',\n      area: recipe.strArea || '',\n      category: recipe.strCategory,\n      alcoholicOrNot: recipe.strAlcoholic || '',\n      name: recipe[`str${type}`],\n      image: recipe[`str${type}Thumb`],\n      doneDate: Date(),\n      tags\n    };\n\n    if (doneRecipes) {\n      const checkDone = doneRecipes.find(item => item.id === recipe[`id${type}`]);\n      if (checkDone) return;\n      return localStorage.setItem('doneRecipes', JSON.stringify([...doneRecipes, obj]));\n    }\n\n    return localStorage.setItem('doneRecipes', JSON.stringify([obj]));\n  }\n\n  render() {\n    const {\n      checkPage,\n      startRecipe,\n      handleProgress,\n      checkRecipeProgress,\n      type,\n      id,\n      history\n    } = this.props;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, !checkPage && /*#__PURE__*/React.createElement(Button, {\n      className: \"start-recipe-btn\",\n      \"data-testid\": \"start-recipe-btn\",\n      variant: \"success\",\n      block: true,\n      onClick: () => {\n        startRecipe(type, id);\n        handleProgress(type, id);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }\n    }, checkRecipeProgress(type, id)), checkPage && /*#__PURE__*/React.createElement(Button, {\n      className: \"start-recipe-btn\",\n      block: true,\n      \"data-testid\": \"finish-recipe-btn\",\n      onClick: () => {\n        history.push('/receitas-feitas');\n        this.doneRecipesBtn();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }\n    }, \"Finalizar receita\"));\n  }\n\n}\nRenderButton.propTypes = {\n  checkPage: PropTypes.string,\n  startRecipe: PropTypes.func.isRequired,\n  handleProgress: PropTypes.func.isRequired,\n  checkRecipeProgress: PropTypes.func.isRequired,\n  type: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func\n  }),\n  recipe: PropTypes.objectOf(PropTypes.oneOfType([PropTypes.string, PropTypes.number])).isRequired\n};\nRenderButton.defaultProps = {\n  checkPage: undefined,\n  history: undefined\n};","map":{"version":3,"sources":["/home/usuario/portfolio/recipesApp/src/components/RenderButton.js"],"names":["React","Component","PropTypes","Button","RenderButton","doneRecipesBtn","recipe","type","props","doneRecipes","JSON","parse","localStorage","getItem","tags","strTags","split","filter","_","index","console","log","obj","id","area","strArea","category","strCategory","alcoholicOrNot","strAlcoholic","name","image","doneDate","Date","checkDone","find","item","setItem","stringify","render","checkPage","startRecipe","handleProgress","checkRecipeProgress","history","push","propTypes","string","func","isRequired","shape","objectOf","oneOfType","number","defaultProps","undefined"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Button from 'react-bootstrap/Button';\n\nexport default class RenderButton extends Component {\n  doneRecipesBtn() {\n    const { recipe, type } = this.props;\n    const doneRecipes = JSON.parse(localStorage.getItem('doneRecipes'));\n    let tags = '';\n    if (recipe.strTags) {\n      tags = recipe.strTags.split(',').filter((_, index) => index < 2);\n    }\n    console.log(tags);\n    const obj = {\n      id: recipe[`id${type}`],\n      type: (type === 'Meal' ? 'comida' : 'bebida'),\n      area: recipe.strArea || '',\n      category: recipe.strCategory,\n      alcoholicOrNot: recipe.strAlcoholic || '',\n      name: recipe[`str${type}`],\n      image: recipe[`str${type}Thumb`],\n      doneDate: Date(),\n      tags,\n    };\n    if (doneRecipes) {\n      const checkDone = doneRecipes.find((item) => item.id === recipe[`id${type}`]);\n      if (checkDone) return;\n      return localStorage.setItem('doneRecipes', JSON.stringify(\n        [...doneRecipes,\n          obj,\n        ],\n      ));\n    }\n    return localStorage.setItem('doneRecipes', JSON.stringify([obj]));\n  }\n\n  render() {\n    const { checkPage, startRecipe, handleProgress,\n      checkRecipeProgress, type, id, history } = this.props;\n    return (\n      <>\n        {!checkPage && (\n          <Button\n            className=\"start-recipe-btn\"\n            data-testid=\"start-recipe-btn\"\n            variant=\"success\"\n            block\n            onClick={ () => {\n              startRecipe(type, id);\n              handleProgress(type, id);\n            } }\n          >\n            {checkRecipeProgress(type, id)}\n          </Button>\n        )}\n\n        {checkPage && (\n          <Button\n            className=\"start-recipe-btn\"\n            block\n            data-testid=\"finish-recipe-btn\"\n            onClick={ () => {\n              history.push('/receitas-feitas');\n              this.doneRecipesBtn();\n            } }\n          >\n            Finalizar receita\n          </Button>\n        )}\n      </>\n    );\n  }\n}\n\nRenderButton.propTypes = {\n  checkPage: PropTypes.string,\n  startRecipe: PropTypes.func.isRequired,\n  handleProgress: PropTypes.func.isRequired,\n  checkRecipeProgress: PropTypes.func.isRequired,\n  type: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func,\n  }),\n  recipe: PropTypes.objectOf(PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n  ])).isRequired,\n};\n\nRenderButton.defaultProps = {\n  checkPage: undefined,\n  history: undefined,\n};\n"]},"metadata":{},"sourceType":"module"}
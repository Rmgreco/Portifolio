{"ast":null,"code":"var _jsxFileName = \"/home/usuario/projetos/sd-08-project-recipes-app/src/components/Item.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport shareIcon from \"../images/shareIcon.svg\";\nimport whiteHeartIcon from \"../images/whiteHeartIcon.svg\";\nexport default class Item extends Component {\n  constructor() {\n    super();\n    this.state = {\n      results: ''\n    };\n    this.fetchRecipe = this.fetchRecipe.bind(this);\n  }\n\n  componentDidMount() {\n    this.fetchRecipe();\n  }\n\n  juntar(chave) {\n    const {\n      results\n    } = this.state;\n    return Object.entries(results.meals[0]).map(nome => {\n      if (nome[0].includes(chave)) {\n        return nome[1];\n      }\n\n      return undefined;\n    }).filter(element => element !== undefined);\n  }\n\n  ingredientesComQuantidades() {\n    const ingredient = this.juntar('strIngredient');\n    const measure = this.juntar('strMeasure');\n    return ingredient.map((nome, index) => {\n      if (nome) {\n        return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"input\", {\n          key: nome,\n          type: \"checkbox\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }\n        }), /*#__PURE__*/React.createElement(\"p\", {\n          \"data-testid\": `${index}-ingredient-name-and-measure`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }\n        }, `${nome} - ${measure[index]}`));\n      }\n\n      return undefined;\n    });\n  }\n\n  async fetchRecipe() {\n    const {\n      location: {\n        pathname\n      }\n    } = this.props;\n    const id = pathname.split('/')[2];\n    const type = pathname.split('/')[1];\n\n    if (type === 'comidas') {\n      const req = await fetch(`https://www.themealdb.com/api/json/v1/1/lookup.php?i=${id}`);\n      const results = await req.json();\n      this.setState({\n        results\n      });\n    }\n\n    if (type === 'bebidas') {\n      const req = await fetch(`https://www.thecocktaildb.com/api/json/v1/1/lookup.php?i=${id}`);\n      const results = await req.json();\n      this.setState({\n        results\n      });\n    }\n  }\n\n  renderMeal() {\n    const {\n      location: {\n        pathname\n      }\n    } = this.props;\n    const type = pathname.split('/')[1];\n    const {\n      results\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 7\n      }\n    }, type === 'comidas' ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"img\", {\n      \"data-testid\": \"recipe-photo\",\n      src: results.meals[0].strMealThumb,\n      alt: \"img\",\n      width: \"70px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      \"data-testid\": \"share-btn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: shareIcon,\n      alt: \"share icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      \"data-testid\": \"favorite-btn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: whiteHeartIcon,\n      alt: \"favorite\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(\"h1\", {\n      \"data-testid\": \"recipe-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }\n    }, results.meals[0].strMeal), /*#__PURE__*/React.createElement(\"p\", {\n      \"data-testid\": \"recipe-category\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }\n    }, results.meals[0].strCategory), /*#__PURE__*/React.createElement(\"iframe\", {\n      title: \"video\",\n      \"data-testid\": \"video\",\n      src: results.meals[0].strYoutube.replace('watch?v=', 'embed/'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }\n    }), results.meals[0].strDrinkAlternate && results.meals[0].strDrinkAlternate.map((drinkAlternate, index) => /*#__PURE__*/React.createElement(\"p\", {\n      key: drinkAlternate,\n      \"data-testid\": `${index}-recomendation-card`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 21\n      }\n    }, drinkAlternate)), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }\n    }, this.ingredientesComQuantidades()), /*#__PURE__*/React.createElement(\"p\", {\n      \"data-testid\": \"instructions\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }\n    }, \"Instru\\xE7\\xF5es:\", results.meals[0].strInstructions), /*#__PURE__*/React.createElement(\"button\", {\n      \"data-testid\": \"start-recipe-btn\",\n      type: \"button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }\n    }, \"Iniciar Receita\")) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"img\", {\n      \"data-testid\": \"recipe-photo\",\n      src: results.drinks[0].strDrinkThumb,\n      alt: \"img\",\n      width: \"70px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"h1\", {\n      \"data-testid\": \"recipe-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }\n    }, results.drinks[0].strDrink), /*#__PURE__*/React.createElement(\"p\", {\n      \"data-testid\": \"recipe-category\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }\n    }, results.drinks[0].strCategory)), /*#__PURE__*/React.createElement(\"p\", {\n      \"data-testid\": \"ingredient-name-and-measure\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }\n    }, \"Ingredientes:\"));\n  }\n\n  render() {\n    const {\n      results\n    } = this.state;\n    if (results === '') return null;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, this.renderMeal());\n  }\n\n}\nItem.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired\n  }).isRequired\n};","map":{"version":3,"sources":["/home/usuario/projetos/sd-08-project-recipes-app/src/components/Item.js"],"names":["React","Component","PropTypes","Item","constructor","state","results","fetchRecipe","bind","componentDidMount","juntar","chave","Object","entries","meals","map","nome","includes","undefined","filter","element","ingredientesComQuantidades","ingredient","measure","index","location","pathname","props","id","split","type","req","fetch","json","setState","renderMeal","strMealThumb","shareIcon","whiteHeartIcon","strMeal","strCategory","strYoutube","replace","strDrinkAlternate","drinkAlternate","strInstructions","drinks","strDrinkThumb","strDrink","render","propTypes","shape","string","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport shareIcon from '../images/shareIcon.svg';\nimport whiteHeartIcon from '../images/whiteHeartIcon.svg';\n\nexport default class Item extends Component {\n  constructor() {\n    super();\n    this.state = {\n      results: '',\n    };\n\n    this.fetchRecipe = this.fetchRecipe.bind(this);\n  }\n\n  componentDidMount() {\n    this.fetchRecipe();\n  }\n\n  juntar(chave) {\n    const { results } = this.state;\n    return Object.entries(results.meals[0]).map((nome) => {\n      if (nome[0].includes(chave)) {\n        return nome[1];\n      }\n      return undefined;\n    }).filter((element) => element !== undefined);\n  }\n\n  ingredientesComQuantidades() {\n    const ingredient = this.juntar('strIngredient');\n    const measure = this.juntar('strMeasure');\n    return ingredient.map((nome, index) => {\n      if (nome) {\n        return (\n          <>\n            <input\n              key={ nome }\n              type=\"checkbox\"\n\n            />\n            <p data-testid={ `${index}-ingredient-name-and-measure` }>\n              {`${nome} - ${measure[index]}`}\n            </p>\n          </>\n        );\n      }\n      return undefined;\n    });\n  }\n\n  async fetchRecipe() {\n    const { location: { pathname } } = this.props;\n    const id = pathname.split('/')[2];\n    const type = pathname.split('/')[1];\n    if (type === 'comidas') {\n      const req = await fetch(`https://www.themealdb.com/api/json/v1/1/lookup.php?i=${id}`);\n      const results = await req.json();\n      this.setState({ results });\n    }\n    if (type === 'bebidas') {\n      const req = await fetch(`https://www.thecocktaildb.com/api/json/v1/1/lookup.php?i=${id}`);\n      const results = await req.json();\n      this.setState({ results });\n    }\n  }\n\n  renderMeal() {\n    const { location: { pathname } } = this.props;\n    const type = pathname.split('/')[1];\n    const { results } = this.state;\n    return (\n      <div>\n        {\n          type === 'comidas'\n            ? (\n              <>\n                <img\n                  data-testid=\"recipe-photo\"\n                  src={ results.meals[0].strMealThumb }\n                  alt=\"img\"\n                  width=\"70px\"\n                />\n                <button type=\"button\" data-testid=\"share-btn\">\n                  <img src={ shareIcon } alt=\"share icon\" />\n                </button>\n                <button type=\"button\" data-testid=\"favorite-btn\">\n                  <img src={ whiteHeartIcon } alt=\"favorite\" />\n                </button>\n                <h1 data-testid=\"recipe-title\">{ results.meals[0].strMeal }</h1>\n                <p data-testid=\"recipe-category\">\n                  { results.meals[0].strCategory }\n                </p>\n                <iframe\n                  title=\"video\"\n                  data-testid=\"video\"\n                  src={ results.meals[0].strYoutube.replace('watch?v=', 'embed/') }\n                />\n                {results.meals[0].strDrinkAlternate\n                && results.meals[0].strDrinkAlternate\n                  .map((drinkAlternate, index) => (\n                    <p\n                      key={ drinkAlternate }\n                      data-testid={ `${index}-recomendation-card` }\n                    >\n                      {drinkAlternate}\n                    </p>\n                  ))}\n                <div>\n                  {this.ingredientesComQuantidades()}\n                </div>\n                <p data-testid=\"instructions\">\n                  Instruções:\n                  {results.meals[0].strInstructions}\n                </p>\n                <button data-testid=\"start-recipe-btn\" type=\"button\">\n                  Iniciar Receita\n                </button>\n              </>\n            )\n            : (\n              <>\n                <img\n                  data-testid=\"recipe-photo\"\n                  src={ results.drinks[0].strDrinkThumb }\n                  alt=\"img\"\n                  width=\"70px\"\n                />\n                <h1 data-testid=\"recipe-title\">{ results.drinks[0].strDrink }</h1>\n                <p data-testid=\"recipe-category\">\n                  { results.drinks[0].strCategory }\n                </p>\n              </>\n            )\n        }\n\n        <p\n          data-testid=\"ingredient-name-and-measure\"\n        >\n          Ingredientes:\n        </p>\n\n      </div>\n    );\n  }\n\n  render() {\n    const { results } = this.state;\n    if (results === '') return null;\n    return (\n      <>\n        {this.renderMeal()}\n      </>\n    );\n  }\n}\n\nItem.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/usuario/portfolio/3-frontEndStore/src/pages/ProductDetails.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport EvaluationForm from '../components/EvaluationForm';\nimport EvaluationList from '../components/EvaluationList';\n\nclass ProductDetails extends React.Component {\n  constructor() {\n    super();\n    this.sendToCart = this.sendToCart.bind(this);\n    this.updateEvaluationList = this.updateEvaluationList.bind(this);\n  }\n\n  sendToCart() {\n    const {\n      location: {\n        state: {\n          title,\n          imagePath,\n          price\n        }\n      }\n    } = this.props;\n    const selectedProducts = JSON.parse(localStorage.getItem('selectedProducts'));\n\n    if (selectedProducts.length === 0) {\n      selectedProducts.push({\n        title,\n        imagePath,\n        price,\n        quantity: 1\n      });\n      localStorage.setItem('selectedProducts', JSON.stringify(selectedProducts));\n    } else {\n      const productFound = selectedProducts.findIndex(product => product.title === title);\n\n      if (productFound >= 0) {\n        selectedProducts[productFound].quantity += 1;\n        localStorage.setItem('selectedProducts', JSON.stringify(selectedProducts));\n      } else {\n        selectedProducts.push({\n          title,\n          price,\n          imagePath,\n          quantity: 1\n        });\n        localStorage.setItem('selectedProducts', JSON.stringify(selectedProducts));\n      }\n    }\n  }\n\n  updateEvaluationList() {\n    this.setState({});\n  }\n\n  render() {\n    const {\n      location: {\n        state: {\n          title,\n          imagePath,\n          price,\n          id\n        }\n      }\n    } = this.props;\n    const evaluations = JSON.parse(localStorage.getItem(`${id}_evaluations`)) || [];\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      \"data-testid\": \"product-detail-name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }\n    }, title), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }\n    }, price), /*#__PURE__*/React.createElement(\"img\", {\n      src: imagePath,\n      alt: \"product\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      \"data-testid\": \"product-detail-add-to-cart\",\n      onClick: this.sendToCart,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }\n    }, \"Adicionar ao carrinho\"), /*#__PURE__*/React.createElement(Link, {\n      \"data-testid\": \"shopping-cart-button\",\n      to: \"/shoppingcart\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }\n    }, \"Carrinho\"), /*#__PURE__*/React.createElement(EvaluationForm, {\n      id: id,\n      triggerUpdate: this.updateEvaluationList,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(EvaluationList, {\n      evaluations: evaluations,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default ProductDetails;\nProductDetails.propTypes = {\n  location: PropTypes.shape({\n    state: PropTypes.shape({\n      title: PropTypes.string,\n      imagePath: PropTypes.string,\n      price: PropTypes.number,\n      id: PropTypes.string\n    })\n  }).isRequired\n};","map":{"version":3,"sources":["/home/usuario/portfolio/3-frontEndStore/src/pages/ProductDetails.jsx"],"names":["React","PropTypes","Link","EvaluationForm","EvaluationList","ProductDetails","Component","constructor","sendToCart","bind","updateEvaluationList","location","state","title","imagePath","price","props","selectedProducts","JSON","parse","localStorage","getItem","length","push","quantity","setItem","stringify","productFound","findIndex","product","setState","render","id","evaluations","propTypes","shape","string","number","isRequired"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,IAAT,QAAqB,kBAArB;AAEA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,OAAOC,cAAP,MAA2B,8BAA3B;;AAEA,MAAMC,cAAN,SAA6BL,KAAK,CAACM,SAAnC,CAA6C;AAC3CC,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,UAAL,GAAkB,KAAKA,UAAL,CAAgBC,IAAhB,CAAqB,IAArB,CAAlB;AACA,SAAKC,oBAAL,GAA4B,KAAKA,oBAAL,CAA0BD,IAA1B,CAA+B,IAA/B,CAA5B;AACD;;AAEDD,EAAAA,UAAU,GAAG;AACX,UAAM;AAAEG,MAAAA,QAAQ,EAAE;AAAEC,QAAAA,KAAK,EAAE;AAAEC,UAAAA,KAAF;AAASC,UAAAA,SAAT;AAAoBC,UAAAA;AAApB;AAAT;AAAZ,QAAuD,KAAKC,KAAlE;AACA,UAAMC,gBAAgB,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,kBAArB,CAAX,CAAzB;;AACA,QAAIJ,gBAAgB,CAACK,MAAjB,KAA4B,CAAhC,EAAmC;AACjCL,MAAAA,gBAAgB,CAACM,IAAjB,CAAsB;AAAEV,QAAAA,KAAF;AAASC,QAAAA,SAAT;AAAoBC,QAAAA,KAApB;AAA2BS,QAAAA,QAAQ,EAAE;AAArC,OAAtB;AACAJ,MAAAA,YAAY,CAACK,OAAb,CAAqB,kBAArB,EAAyCP,IAAI,CAACQ,SAAL,CAAeT,gBAAf,CAAzC;AACD,KAHD,MAGO;AACL,YAAMU,YAAY,GAAGV,gBAAgB,CAClCW,SADkB,CACPC,OAAD,IAAaA,OAAO,CAAChB,KAAR,KAAkBA,KADvB,CAArB;;AAEA,UAAIc,YAAY,IAAI,CAApB,EAAuB;AACrBV,QAAAA,gBAAgB,CAACU,YAAD,CAAhB,CAA+BH,QAA/B,IAA2C,CAA3C;AACAJ,QAAAA,YAAY,CAACK,OAAb,CAAqB,kBAArB,EAAyCP,IAAI,CAACQ,SAAL,CAAeT,gBAAf,CAAzC;AACD,OAHD,MAGO;AACLA,QAAAA,gBAAgB,CAACM,IAAjB,CAAsB;AAAEV,UAAAA,KAAF;AAASE,UAAAA,KAAT;AAAgBD,UAAAA,SAAhB;AAA2BU,UAAAA,QAAQ,EAAE;AAArC,SAAtB;AACAJ,QAAAA,YAAY,CAACK,OAAb,CAAqB,kBAArB,EAAyCP,IAAI,CAACQ,SAAL,CAAeT,gBAAf,CAAzC;AACD;AACF;AACF;;AAEDP,EAAAA,oBAAoB,GAAG;AACrB,SAAKoB,QAAL,CAAc,EAAd;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEpB,MAAAA,QAAQ,EAAE;AAAEC,QAAAA,KAAK,EAAE;AAAEC,UAAAA,KAAF;AAASC,UAAAA,SAAT;AAAoBC,UAAAA,KAApB;AAA2BiB,UAAAA;AAA3B;AAAT;AAAZ,QAA2D,KAAKhB,KAAtE;AACA,UAAMiB,WAAW,GAAGf,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAsB,GAAEW,EAAG,cAA3B,CAAX,KAAyD,EAA7E;AACA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAG,qBAAY,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAsCnB,KAAtC,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIE,KAAJ,CAFF,eAGE;AAAK,MAAA,GAAG,EAAGD,SAAX;AAAuB,MAAA,GAAG,EAAC,SAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,eAIE;AACE,MAAA,IAAI,EAAC,QADP;AAEE,qBAAY,4BAFd;AAGE,MAAA,OAAO,EAAG,KAAKN,UAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAJF,eAWE,oBAAC,IAAD;AAAM,qBAAY,sBAAlB;AAAyC,MAAA,EAAE,EAAC,eAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAXF,eAYE,oBAAC,cAAD;AAAgB,MAAA,EAAE,EAAGwB,EAArB;AAA0B,MAAA,aAAa,EAAG,KAAKtB,oBAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAZF,eAaE,oBAAC,cAAD;AAAgB,MAAA,WAAW,EAAGuB,WAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAbF,CADF;AAiBD;;AAlD0C;;AAqD7C,eAAe5B,cAAf;AAEAA,cAAc,CAAC6B,SAAf,GAA2B;AACzBvB,EAAAA,QAAQ,EAAEV,SAAS,CAACkC,KAAV,CAAgB;AACxBvB,IAAAA,KAAK,EAAEX,SAAS,CAACkC,KAAV,CAAgB;AACrBtB,MAAAA,KAAK,EAAEZ,SAAS,CAACmC,MADI;AAErBtB,MAAAA,SAAS,EAAEb,SAAS,CAACmC,MAFA;AAGrBrB,MAAAA,KAAK,EAAEd,SAAS,CAACoC,MAHI;AAIrBL,MAAAA,EAAE,EAAE/B,SAAS,CAACmC;AAJO,KAAhB;AADiB,GAAhB,EAOPE;AARsB,CAA3B","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nimport EvaluationForm from '../components/EvaluationForm';\nimport EvaluationList from '../components/EvaluationList';\n\nclass ProductDetails extends React.Component {\n  constructor() {\n    super();\n    this.sendToCart = this.sendToCart.bind(this);\n    this.updateEvaluationList = this.updateEvaluationList.bind(this);\n  }\n\n  sendToCart() {\n    const { location: { state: { title, imagePath, price } } } = this.props;\n    const selectedProducts = JSON.parse(localStorage.getItem('selectedProducts'));\n    if (selectedProducts.length === 0) {\n      selectedProducts.push({ title, imagePath, price, quantity: 1 });\n      localStorage.setItem('selectedProducts', JSON.stringify(selectedProducts));\n    } else {\n      const productFound = selectedProducts\n        .findIndex((product) => product.title === title);\n      if (productFound >= 0) {\n        selectedProducts[productFound].quantity += 1;\n        localStorage.setItem('selectedProducts', JSON.stringify(selectedProducts));\n      } else {\n        selectedProducts.push({ title, price, imagePath, quantity: 1 });\n        localStorage.setItem('selectedProducts', JSON.stringify(selectedProducts));\n      }\n    }\n  }\n\n  updateEvaluationList() {\n    this.setState({});\n  }\n\n  render() {\n    const { location: { state: { title, imagePath, price, id } } } = this.props;\n    const evaluations = JSON.parse(localStorage.getItem(`${id}_evaluations`)) || [];\n    return (\n      <div>\n        <p data-testid=\"product-detail-name\">{title}</p>\n        <p>{price}</p>\n        <img src={ imagePath } alt=\"product\" />\n        <button\n          type=\"button\"\n          data-testid=\"product-detail-add-to-cart\"\n          onClick={ this.sendToCart }\n        >\n          Adicionar ao carrinho\n        </button>\n        <Link data-testid=\"shopping-cart-button\" to=\"/shoppingcart\">Carrinho</Link>\n        <EvaluationForm id={ id } triggerUpdate={ this.updateEvaluationList } />\n        <EvaluationList evaluations={ evaluations } />\n      </div>\n    );\n  }\n}\n\nexport default ProductDetails;\n\nProductDetails.propTypes = {\n  location: PropTypes.shape({\n    state: PropTypes.shape({\n      title: PropTypes.string,\n      imagePath: PropTypes.string,\n      price: PropTypes.number,\n      id: PropTypes.string,\n    }),\n  }).isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}